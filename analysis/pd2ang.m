% pd2ang.m: convert between PD and Angle for Small Angles (<30D).% Usage: out = pd2ang(pd_or_ang, inputValue, conv);%% where pd_or_ang = 1 converts PD to Angle (1D=0.57¡)%                 = 2 converts Angle to PD (1¡=1.75D)% inputValue is the number to be converted.% conv = 0 returns 'out' as an Angle or Prism Diopters.%      = 1 returns 'out' as a Convergence Angle or B.O. Prism Diopters.%% Alternatively, you can simply type "pd2ang" and follow the prompts% Written by:  L.F. Dell'Osso% Based on va2naf.m%              June 2000 (last mod: 5/16/02)function out = pd2ang(pd_or_ang, inpVal, conv)if nargin == 0   pd2ang_gui   return   pd_or_ang = -1;   inpVal=-1;   verbose=1; else   verbose=0;endwhile(pd_or_ang<1) | (pd_or_ang>2)   disp(' 1) Convert PD to Angle')   disp(' 2) Convert Angle to PD')   pd_or_ang = input(' --> ');endif pd_or_ang == 1   pd=inpVal;   if verbose      disp(' 0) Single Prism Angle')      disp(' 1) Base-Out Prisms Convergence Angle')      conv = input(' --> ');   end      if conv == 0         while (pd<0) | (pd>180*1.75)            pd = input('Enter the Prism Diopters: ');         end         ang = pd*0.57;         if verbose            disp(['  Angle calculated to be ' num2str(ang) ' deg'])            return         end         out = ang;       else         while (pd<0) | (pd>180*1.75)            pd = input('Enter Sum of B.O. Prism Diopters: ');         end         ang = pd*0.57;         if verbose            disp(['  Convergence Angle calculated to be ' num2str(ang) ' deg'])            return         end         out = ang;      end else   ang=inpVal;   if verbose      disp(' 0) Single Prism Angle')      disp(' 1) Base-Out Prisms Convergence Angle')      conv = input(' --> ');   end      if conv == 0         while (ang<0) | (ang>180)            ang = input('Enter the Angle (degrees): ');         end         pd = ang*1.75;         if verbose            disp(['  Prism Diopters calculated to be ' num2str(pd)])            return         end         out = pd;       else         while (ang<0) | (ang>180)            ang = input('Enter the Convergence Angle (degrees): ');         end         pd = 0.5*ang*1.75;         if verbose            disp(['  Each B.O. Prism calculated to be ' num2str(pd) ' D'])            return         end         out = pd;      endend