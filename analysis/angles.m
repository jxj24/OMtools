% angles.m: list and describe programs involving angles, distances, or surgery.% Usage: help angles% -----------------------------------------------------------------------------% AKPlot.m% m-file to plot Surgical Rotation vs. Null-Angle shift% using the function AKshift.m % -----------------------------------------------------------------------------% AKshift.m: convert between Total mm of R&R and Null-Angle shift.% Usage: out = akshift(mm_or_ang, inputValue, rr);%% where mm_or_ang = 1 converts mm of Surgical Rotation to Null-Angle Shift%                 = 2 converts Null-Angle Shift to mm of Surgical Rotation% inputValue is the number to be converted.% rr = 0 returns 'out' as an Angle or single-muscle mm.%    = 1 returns 'out' as an  Angle or total mm of R&R.%% Alternatively, you can simply type "pd2ang" and follow the prompts% To plot the function, use 'AKplot'% -----------------------------------------------------------------------------% dist2conv.m: convert between Distance and Convergence Angle.% Usage: out = dist2conv(dist_or_conv, ipd, inputValue);%% where dist_or_conv = 1 converts Distance to Convergence Angle (in deg)%                    = 2 converts Convergence Angle (in deg) to Distance% 		ipd is interpupillary distance (ANY units).% 		inputValue is the Target Distance to be converted (SAME units) or%					  the Convergence Angle to be converted (in deg).% Distance and Interpupillary Distance must be SAME units.%% Alternatively, you can simply type "dist2conv" and follow the prompts% -----------------------------------------------------------------------------% pd2ang.m: convert between PD and Angle for Small Angles (<30D).% Usage: out = pd2ang(pd_or_ang, inputValue, conv);%% where pd_or_ang = 1 converts PD to Angle (1D=0.57¡)%                 = 2 converts Angle to PD (1¡=1.75D)% inputValue is the number to be converted.% conv = 0 returns 'out' as an Angle or Prism Diopters.%      = 1 returns 'out' as a Convergence Angle or B.O. Prism Diopters.%% Alternatively, you can simply type "pd2ang" and follow the prompts% -----------------------------------------------------------------------------% Lines that may be plotted onto figures after using holdfig:%	nafx6line - NAFX vs VA line (humans <6 acuity line)%	nafx6_12line - NAFX vs VA line (humans 6-12, >60 acuity line)%	nafx12_40line - NAFX vs VA line (humans >12-40 acuity line)%	nafx40_60line - NAFX vs VA line (humans >40-60 acuity line)%	nafxcanvaline - NAFX vs canine VA line (new canine acuity line)%	nafxvaline - NAFX vs VA line (original human acuity line)% -----------------------------------------------------------------------------% Plots that may be called by loadfig:%	akplot - Anderson-Kestenbaum surgical plot (null shift vs mm surgery)%	nafxvaplt - NAFX vs VA acuity lines for different age ranges%	nafxcanvaplt - NAFX vs original human and canine acuity lines%	rrfig1a - Anderson-Kestenbaum surgical null shift%	rrfig1b - Anderson-Kestenbaum surgical null shift + broadening% -----------------------------------------------------------------------------% VrgAng.m: Use IPD to calculate Convergence Angle of LED's on stimulus bar.% Usage: out or [out1,out2] = vrgang(LEDnum_or_conv, ipd, cnv1, inputValue)%% where LEDnum_or_conv = 1 converts LEDnum to Convergence Angle (in deg)%                      = 2 converts Convergence Angle (in deg) to LEDnum% 		ipd is interpupillary distance.% 		cnv1 is convergence angle to LED 1 (in PD).% 		inputValue is: the LEDnum to be converted (1-9, where 9=FAR=1524mm) or% 					   the Convergence Angle to be converted (in deg).% Distance of LEDnum and Interpupillary Distance must be SAME units.%% Alternatively, you can simply type "VrgAng" and follow the prompts.% -----------------------------------------------------------------------------% Written by:  L.F. Dell'Osso%              November 2004 (last mod: xx/xx/xx)   disp(' Usage: help angles')