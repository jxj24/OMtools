% tButt3.m:  handles most of the control buttons in "tplot3"% this way we don't need to declare a whole bunch of global% variables in the main workspace.% Written by: Jonathan Jacobs%             April 1996 (last mod: 04/08/96)function tButt3( buttName )global sli_azm sli_elv azm_cur elv_curglobal elv azm fig hOffset hBox hExportglobal offset pts samp_freqglobal list_1 list_2 list_3 exportglobal hXHigh hXLow hYHigh hYLow hZHigh hZLowglobal hXLock hYLock hZLockif strcmp( buttName, 'Fwd' )   offset = offset - 1;   set(hOffset, 'Str', num2str(offset*1000/samp_freq));   update3( offset, pts, samp_freq );   if get(hXLock, 'Val') == 0      max_1 = max(list_1); if max_1 == 0, max_1 =  1; end      min_1 = min(list_1); if min_1 == 0, min_1 = -1; end      set(gca, 'XLim', [min_1-abs(min_1*0.125)  max_1+abs(max_1*0.125)])      set( hXLow,  'Str', num2str(min_1-abs(min_1*0.125)) );      set( hXHigh, 'Str', num2str(max_1+abs(max_1*0.125)) );   end   if get(hYLock, 'Val') == 0      max_2 = max(list_2); if max_2 == 0, max_2 =  1; end      min_2 = min(list_2); if min_2 == 0, min_2 = -1; end      set(gca, 'YLim', [min_2-abs(min_2*0.125)  max_2+abs(max_2*0.125)])      set( hYLow,  'Str', num2str(min_2-abs(min_2*0.125)) );      set( hYHigh, 'Str', num2str(max_2+abs(max_2*0.125)) );   end   if get(hZLock, 'Val') == 0      max_3 = max(list_3); if max_3 == 0, max_3 =  1; end      min_3 = min(list_3); if min_3 == 0, min_3 = -1; end      set(gca, 'ZLim', [min_3-abs(min_3*0.125)  max_3+abs(max_3*0.125)])      set( hZLow,  'Str', num2str(min_3-abs(min_3*0.125)) );      set( hZHigh, 'Str', num2str(max_3+abs(max_3*0.125)) );   endendif strcmp( buttName, 'Back' )   offset = offset + 1;   set(hOffset, 'Str', num2str(offset*1000/samp_freq));   update3( offset, pts, samp_freq );   if get(hXLock, 'Val') == 0      max_1 = max(list_1); if max_1 == 0, max_1 =  1; end      min_1 = min(list_1); if min_1 == 0, min_1 = -1; end      set(gca, 'XLim', [min_1-abs(min_1*0.125)  max_1+abs(max_1*0.125)])      set( hXLow,  'Str', num2str(min_1-abs(min_1*0.125)) );      set( hXHigh, 'Str', num2str(max_1+abs(max_1*0.125)) );   end   if get(hYLock, 'Val') == 0      max_2 = max(list_2); if max_2 == 0, max_2 =  1; end      min_2 = min(list_2); if min_2 == 0, min_2 = -1; end      set(gca, 'YLim', [min_2-abs(min_2*0.125)  max_2+abs(max_2*0.125)])      set( hYLow,  'Str', num2str(min_2-abs(min_2*0.125)) );      set( hYHigh, 'Str', num2str(max_2+abs(max_2*0.125)) );   end   if get(hZLock, 'Val') == 0      max_3 = max(list_3); if max_3 == 0, max_3 =  1; end      min_3 = min(list_3); if min_3 == 0, min_3 = -1; end      set(gca, 'ZLim', [min_3-abs(min_3*0.125)  max_3+abs(max_3*0.125)])      set( hZLow,  'Str', num2str(min_3-abs(min_3*0.125)) );      set( hZHigh, 'Str', num2str(max_3+abs(max_3*0.125)) );   endendif strcmp( buttName, 'AvsV')   view([90 0]);   set(sli_azm, 'Value', 90 );                % update slider   set(azm_cur, 'String', num2str(90) );      % value & display   set(sli_elv, 'Value', 0 );   set(elv_cur, 'String', num2str(0) );   returnendif strcmp( buttName, 'VvsP')   view([0 90]);   set(sli_azm, 'Value', 0 );                 % update slider   set(azm_cur, 'String', num2str(0) );       % value & display   set(sli_elv, 'Value', 90 );   set(elv_cur, 'String', num2str(90) );   returnendif strcmp( buttName, '3D')   view([-37.5 30]);   set(sli_azm, 'Value', -37.5 );             % update slider   set(azm_cur, 'String', num2str(-37.5) );   % value & display   set(sli_elv, 'Value', 30 );   set(elv_cur, 'String', num2str(30) );   returnendif strcmp( buttName, 'sli_azm')   azm=get(sli_azm,'Val');          % this will change   elv=get(sli_elv,'Val');          % the screen view and   figure(fig);                     % will update the    view([azm,elv]);                 % azimuth readout.   set( azm_cur,'String', num2str(azm) );endif strcmp( buttName, 'sli_elv')   azm=get(sli_azm,'Val');          % this will change   elv=get(sli_elv,'Val');          % the screen view and   figure(fig);                     % will update the    view([azm,elv]);                 % elevation readout.   set( elv_cur,'String', num2str(elv) );endif strcmp( buttName, 'azm_cur')   old_elv = str2num(get(elv_cur,'String'));  % type in a new   new_azm = str2num(get(azm_cur,'String'));  % azimuth value   view([new_azm old_elv]);   set(sli_azm, 'Value', new_azm);endif strcmp( buttName, 'elv_cur')   new_elv = str2num(get(elv_cur,'String'));  % type in a new   old_azm = str2num(get(azm_cur,'String'));  % elevation value   view([old_azm new_elv]);   set(sli_elv, 'Value', new_elv);endif strcmp( buttName, 'hOffset')          % type in a new   time = str2num(get(hOffset, 'str'));  % time value   if (time >  200), time =  200; end   if (time < -200), time = -200; end   offset = fix((time*samp_freq)/1000);   set(hOffset, 'Str', num2str(offset*1000/samp_freq));   update3( offset, pts, samp_freq );   if get(hXLock, 'Val') == 0      max_1 = max(list_1); if max_1 == 0, max_1 =  1; end      min_1 = min(list_1); if min_1 == 0, min_1 = -1; end      set(gca, 'XLim', [min_1-abs(min_1*0.125)  max_1+abs(max_1*0.125)])      set( hXLow,  'Str', num2str(min_1-abs(min_1*0.125)) );      set( hXHigh, 'Str', num2str(max_1+abs(max_1*0.125)) );   end   if get(hYLock, 'Val') == 0      max_2 = max(list_2); if max_2 == 0, max_2 =  1; end      min_2 = min(list_2); if min_2 == 0, min_2 = -1; end      set(gca, 'YLim', [min_2-abs(min_2*0.125)  max_2+abs(max_2*0.125)])      set( hYLow,  'Str', num2str(min_2-abs(min_2*0.125)) );      set( hYHigh, 'Str', num2str(max_2+abs(max_2*0.125)) );   end   if get(hZLock, 'Val') == 0      max_3 = max(list_3); if max_3 == 0, max_3 =  1; end      min_3 = min(list_3); if min_3 == 0, min_3 = -1; end      set(gca, 'ZLim', [min_3-abs(min_3*0.125)  max_3+abs(max_3*0.125)])      set( hZLow,  'Str', num2str(min_3-abs(min_3*0.125)) );      set( hZHigh, 'Str', num2str(max_3+abs(max_3*0.125)) );   endendif strcmp( buttName, 'Export')   time = round(str2num(get(hOffset, 'str')));   posFileName  = ['pos' num2str(time) '.txt'];   velFileName  = ['vel' num2str(time) '.txt'];   accFileName  = ['acc' num2str(time) '.txt'];   mPosFileName = ['mpos' num2str(time) '.txt'];   mVelFileName = ['mvel' num2str(time) '.txt'];   mAccFileName = ['macc' num2str(time) '.txt'];   expdir   mean_1 = mean(list_1);   mean_2 = mean(list_2);   mean_3 = mean(list_3);   eval( ['save ' posFileName '  list_1 /ascii'] )    eval( ['save ' velFileName '  list_2 /ascii'] )    eval( ['save ' accFileName '  list_3 /ascii'] )    eval( ['save ' mPosFileName ' mean_1 /ascii'] )    eval( ['save ' mVelFileName ' mean_2 /ascii'] )    eval( ['save ' mAccFileName ' mean_3 /ascii'] ) endif strcmp( buttName, 'xLow' )   old_XHigh = str2num(get(hXHigh,'String'));  % type in a new   new_XLow  = str2num(get(hXLow, 'String'));  % xLow value   if new_XLow < old_XHigh               set(gca, 'XLim', [new_XLow old_XHigh]);   endendif strcmp( buttName, 'xHigh' )   new_XHigh = str2num(get(hXHigh,'String'));  % type in a new   old_XLow  = str2num(get(hXLow, 'String'));  % xHigh value   if new_XHigh > old_XLow               set(gca, 'XLim', [old_XLow new_XHigh]);   endendif strcmp( buttName, 'yLow' )   old_YHigh = str2num(get(hYHigh,'String'));  % type in a new   new_YLow  = str2num(get(hYLow, 'String'));  % yLow value   if new_YLow < old_YHigh               set(gca, 'YLim', [new_YLow old_YHigh]);   endendif strcmp( buttName, 'yHigh' )   new_YHigh = str2num(get(hYHigh,'String'));  % type in a new   old_YLow  = str2num(get(hYLow, 'String'));  % yHigh value   if new_YHigh > old_YLow               set(gca, 'YLim', [old_YLow new_YHigh]);   endendif strcmp( buttName, 'zLow' )   old_ZHigh = str2num(get(hZHigh,'String'));  % type in a new   new_ZLow  = str2num(get(hZLow, 'String'));  % zLow value   if new_ZLow < old_ZHigh               set(gca, 'ZLim', [new_ZLow old_ZHigh]);   endendif strcmp( buttName, 'zHigh' )   new_ZHigh = str2num(get(hZHigh,'String'));  % type in a new   old_ZLow  = str2num(get(hZLow, 'String'));  % zHigh value   if new_ZHigh > old_ZLow               set(gca, 'ZLim', [old_ZLow new_ZHigh]);   endendif strcmp( buttName, 'Quit')   uiobjects = findobj(fig,'Type','uicontrol');   delete(uiobjects)   set(gca, 'Pos', [0.13 0.11 0.775 0.815]);   clear global sli_azm sli_elv azm_cur elv_cur   clear global elv azm hOffset hBox hExport   clear global offset pts refSign   clear global list_1 list_2 list_3   clear global hXHigh hXLow hYHigh hYLow hZHigh hZLow   clear global hXLock hYLock hZLock   %close(fig);end