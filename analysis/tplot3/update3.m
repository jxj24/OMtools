function update3( offset, pts, samp_freq )% Updates the x, y and z data of the current axes% with the info sent.  Called from tplot3.m% Written by Jonathan Jacobs & Peggy Skelly%            September 1996 - April 1996  (last mod: 04/02/96)global hBox filenameglobal sd_1 sd_2 sd_3 avg_1 avg_2 avg_3global list_1 list_2 list_3 refSignpt_colors = hsv(25);colr = abs( rem( abs(offset-20), 25 ) + 1 );[nRows nCols] = size(pts);% extract the data from the UserData fieldfig = gcf;big_temp = get( fig, 'UserData' );[temp_rows, temp_cols] = size(big_temp);input_1 = big_temp( :, 1:temp_cols/3 );input_2 = big_temp( :,   temp_cols/3+1:2*temp_cols/3 );input_3 = big_temp( :, 2*temp_cols/3+1:temp_cols );% are SD (and avg?) meaningful for only one column of data% calc the new sd and centroidstemp_1 = []; temp_2 = []; temp_3 = [];for i=1:nCols                        % put all the data into 1 column...   num_pts = length(find(pts(:,i) <100000));       %exclude padding NaNs   pt_col = pts(1:num_pts,i);   temp_1 = [temp_1' input_1(pt_col-offset,i)']';  %the ith column of data   temp_2 = [temp_2' input_2(pt_col-offset,i)']';  %is indexed by the ith   temp_3 = [temp_3' input_3(pt_col-offset,i)']';  %col of the saccade listend% see the comments in TPLOT3 about the following sections of code.%goodPts = find( (sign(temp_2) == refSign) | (sign(temp_2) == 0) );%list_1 = temp_1(goodPts);%list_2 = temp_2(goodPts);%list_3 = temp_3(goodPts);list_1 = temp_1;list_2 = temp_2;list_3 = temp_3;%sd_str = 'SD not meaningful';% we add 20 to the offset to allow us to look at times AFTER% the saccade as well.entry = offset + 20;avg_1(entry) = mean(list_1);avg_2(entry) = mean(list_2);avg_3(entry) = mean(list_3);sd_1(entry) = std(list_1);sd_2(entry) = std(list_2);sd_3(entry) = std(list_3);sd_str=[ '-- SD(x,y,z): (' num2str( sd_1(entry) ) ',' ,...                           num2str( sd_2(entry) ) ',' ,...                           num2str( sd_3(entry) ) ')'];avg_str=[ '-- Avg(x,y,z): (' num2str( avg_1(entry) ) ',' ,...                             num2str( avg_2(entry) ) ',' ,...                             num2str( avg_3(entry) ) ')'];end% get handles to existing lines% kid(1) is the centroid handle% kid(2) is the most recent XYZ data handlekid = get( gca, 'UserData' );if get(hBox, 'value') == 1           % trails on   hLine1 = line( avg_1(entry), avg_2(entry), avg_3(entry) );   hLine2 = line( list_1, list_2, list_3 );   new_colr = pt_colors(colr,:);   set(hLine1, 'Color', new_colr);   set(hLine2, 'Color', new_colr);   set(hLine1, 'LineStyle', '+');   set(hLine2, 'LineStyle', '.');   % store the centroid as the 1st kid.   % store the line as the 2nd kid. They're kept in the axis userdata   set( gca, 'UserData', [ hLine1; hLine2 ] ); else                                   % trails off   new_X = list_1;   new_Y = list_2;   new_Z = list_3;   set( kid(2), 'XData', new_X,...          % the pos & vel                'YData', new_Y,...                                  'ZData', new_Z,...          % [0 1 1] is cyan                       'Color', [0 1 1] );   set( kid(1), 'XData', avg_1(entry),...  % the centroid                'YData', avg_2(entry),...                           'ZData', avg_3(entry),...                           'Color', [1 1 0] );  end% update the titlenewWhen = num2str(1000/samp_freq * offset);sacnum = [num2str(length(list_1)) ' saccades'];end%set( get(gca,'title'), 'String', ...%     [sacnum '   ' newWhen ' ms before saccade ' avg_str] )set( get(gca,'title'), 'String', ...     [sacnum '   -' newWhen ' ms ' avg_str] )