% eyeMovAct.m: called by eyeMovie.m    % Written by: Jonathan Jacobs%             February 1997 - February 2000 (last mod:  02/17/00)% must be accompanied by 'eyeMovie.m', 'pause2.m', and 'findMe.m'function eyeMovAct()global lh rh lv rv st sv samp_freq namearrayglobal whatSampH whatTimeH startH stopHglobal speedFacH decimateH planeH conjugacyH povH xLimH yLimH% use the LAST record loadedhasLH = 0;hasRH = 0;hasLV = 0;hasRV = 0;hasST = 0;hasSV = 0;lhr = 0; rhr=0; lvr=0; rvr=0; str=0; svr=0;if ~isempty(lh), [lhr,lhc] = size(lh); lhData = lh(:,lhc); hasLH = 1; endif ~isempty(rh), [rhr,rhc] = size(rh); rhData = rh(:,rhc); hasRH = 1; endif ~isempty(lv), [lvr,lvc] = size(lv); lvData = lv(:,lvc); hasLV = 1; endif ~isempty(rv), [rvr,rvc] = size(rv); rvData = rv(:,rvc); hasRV = 1; endif ~isempty(st), [str,stc] = size(st); stData = st(:,stc); hasST = 1; endif ~isempty(sv), [svr,svc] = size(sv); svData = sv(:,svc); hasSV = 1; end% initialize missing data arrays, if necessarydatpts = max([lhr rhr lvr rvr str svr]);  % all non-zero entries should be the same.if ~hasLH, lhData=zeros(datpts,1);endif ~hasRH, rhData=zeros(datpts,1);endif ~hasLV, lvData=zeros(datpts,1);endif ~hasRV, rvData=zeros(datpts,1);endif ~hasST, stData=zeros(datpts,1);endif ~hasSV, svData=zeros(datpts,1);endstartAt = str2num(get(startH,'String'));stopAt = str2num(get(stopH,'String'));speedFactor = str2num(get(speedFacH,'String'));decimate = str2num(get(decimateH,'String'));planeStr = ['h' 'v' 'b'];plane = planeStr(get(planeH,'Value'));conjugacy = get(conjugacyH,'Value') - 1;viewMode = get(povH,'Value') - 1;% now we handle the 2nd and 3rd args (start and stop times)% convert start time to samples, if necessaryif (startAt < datpts/samp_freq)    % it's in time   startPt = startAt*samp_freq;    % convert it to nearest sample number else   startPt = startAt;              % it's in samples, so do nothingend% convert stop time to samples, if necessaryif (stopAt > datpts/samp_freq)     % it's in samples   stopPt = stopAt;                % do nothing else   stopPt = stopAt*samp_freq;      % convert to nearest sample numberend% make sure that start and stop times make senseif startPt == 0, startPt = 1; end    % can't have 0'th index...if stopPt == 0,  stopPt = 1;  end    % can't have 0'th index...if startPt > stopPt   temp = stopPt;   stopPt = startPt;   startPt = temp;   set(startH,'String',num2str(startPt/samp_freq));   set(stopH,'String',num2str(stopPt/samp_freq));endtrueTime = ( (stopPt-startPt+1)/samp_freq );realTimeFac = 1.0;stepsize = fix(samp_freq/decimate);if viewMode == 0   lhData = -lhData;   LEplot = 2;   rhData = -rhData;   REplot = 1;   stData = -stData;   povStr = ['      Looking AT the subject''s eyes'];  elseif viewMode == 1   LEplot = 1;   REplot = 2;   povStr = ['Watching THROUGH the subject''s eyes']; end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% not actually necessary anymore.  but maybe it will be again...lvMin = 1000; lvMax = -1000; lhMin = 1000; lhMax = -1000;rvMin = 1000; rvMax = -1000; rhMin = 1000; rhMax = -1000;lvMin = min(lvData); rvMin = min(rvData);lvMax = max(lvData); rvMax = max(rvData);vertMin = min(lvMin, rvMin); vertMax = max(lvMax, rvMax);lhMin = min(lhData); rhMin = min(rhData);lhMax = max(lhData); rhMax = max(rhData);horizMin = min(lhMin, rhMin); horizMax = max(lhMax, rhMax);% draw initial eye positions & set axis limits %xlims(2) = str2num( get(xLimH,'String') );xlims(1) = -xlims(2);ylims(2) = str2num( get(yLimH,'String') );ylims(1) = -ylims(2);% set up line originsif viewMode == 0         %% looking AT eyes   yPOV = ylims(2);   lexPOV =  2;    leAxXorig = 0.578;   rexPOV = -2;    reAxXorig = 0.13;  elseif viewMode == 1   %% looking THROUGH eyes   yPOV = ylims(1);   lexPOV = -2;    leAxXorig = 0.13;   rexPOV =  2;    reAxXorig = 0.578;end% set up the graphs.  If we want to display a conjugacy plot we will% only need one plot, otherwise we must set up two subplots.if ~conjugacy   reAxis = subplot(1,2,REplot);   set(reAxis,'Pos',[reAxXorig 0.25 0.327 0.665]); else   reAxis = subplot(1,1,1);   set(reAxis,'Pos',[0.13 0.25 0.775 0.665]);   reLine = line([0 ylims(2)],[0 0]);   set(reLine,'Color','c');endhold onrightEye = plot(0, 0, 'co', 'markersize', 24);rightFov = plot(0, 0, 'co', 'markersize', 6);set(reAxis, 'xlim', xlims);set(reAxis, 'ylim', ylims);set(reAxis, 'Box', 'on');rAxVGrdLin = plot([0 0],ylims,'w--');rAxHGrdLin = plot(xlims,[0 0],'w--');set(reAxis,'Xtick',[-50 -40 -30 -20 -10 0 10 20 30 40 50]);tgtR = plot(NaN, NaN, 'r+', 'markersize', 24);xtlstr = get(reAxis,'XTickLabels');xtl = abs(str2num(xtlstr));set(reAxis,'XTickLabels',xtl);ylabel('<-- D                  Gaze                 U -->');if conjugacy   if viewMode      xlabel('LE     RE');      title('<-- L                  Gaze                 R -->')     elseif ~viewMode      title('RE     LE');      xlabel('<-- R                  Gaze                 L -->')   end elseif ~conjugacy  if viewMode      title('Right Eye','Color','c');      xlabel('<-- L                Gaze               R -->')   elseif ~viewMode      title('Right Eye','Color','c');      xlabel('<-- R                Gaze               L -->')  endend% initialize the LEif conjugacy   % left eye will go in the already-created axis   leLine = line([0 ylims(2)],[0 0]);   set(leLine,'Color','y');  else   % create an axis for the left eye   leAxis = subplot(1,2,LEplot);   set(leAxis,'Pos',[leAxXorig 0.25 0.327 0.665]);   hold on   set(leAxis, 'xlim', xlims);   set(leAxis, 'ylim', ylims);   set(leAxis, 'Box', 'on');   lAxVGrdLin = plot([0 0],ylims,'w--');   lAxHGrdLin = plot(xlims,[0 0],'w--');   set(leAxis,'Xtick',[-50 -40 -30 -20 -10 0 10 20 30 40 50]);   title('Left Eye','Color','y')   xtlstr = get(leAxis,'XTickLabels');   xtl = abs(str2num(xtlstr));   set(leAxis,'XTickLabels',xtl);   ylabel('<-- D                  Gaze                 U -->');   if ~viewMode      xlabel('<-- R                Gaze               L -->')    else      xlabel('<-- L                Gaze               R -->')   endendhold onleftEye = plot(0, 0, 'yo', 'markersize', 24);leftFov = plot(0, 0, 'yo', 'markersize', 6);tgtL = plot(0, 0, 'r+', 'markersize', 24);if conjugacy   eyeballL = plot(lexPOV, yPOV,'yo');   eyeballR = plot(rexPOV, yPOV,'co');   set(eyeballL,'Markersize',10);   set(eyeballR,'Markersize',10);end%% this insures faster, smoother animation.  At least if should have.%% who knew that ML 5.x screwed up erasemode?erasemode = 'background';%erasemode = 'xor';%erasemode = 'normal';%erasemode = 'none';set( leftEye,  'erasemode', erasemode);set( rightEye, 'erasemode', erasemode);set( leftFov,  'erasemode', erasemode);set( rightFov, 'erasemode', erasemode);set( tgtL,     'erasemode', erasemode);set( tgtR,     'erasemode', erasemode);if conjugacy   set( leLine,   'erasemode', erasemode);   set( reLine,   'erasemode', erasemode);end% zero out the unwanted plane (if any)if plane == 'h'   rvData = zeros(datpts,1); lvData = zeros(datpts,1);  elseif plane == 'v'   rhData = zeros(datpts,1); lhData = zeros(datpts,1);end% time to actually do the movie...pauseTime = realTimeFac*speedFactor*samp_freq/stepsize;set(reAxis,'DrawMode','fast');set(gcf,'BackingStore', 'off');if ~conjugacy, set(leAxis,'DrawMode','fast'); endaaa=0;refresht=cputime;for i = startPt:stepsize:stopPt   % holy shit, is this skanky!  but the performance hit of updating   % every 2 steps is actually less than using a normal erasemode. sheesh.   aaa=aaa+1;   if aaa==2      set(rAxVGrdLin,'Xdata',[0 0],'YData',ylims);         set(rAxHGrdLin,'Xdata',xlims,'YData',[0 0]);      if ~conjugacy         set(lAxVGrdLin,'Xdata',[0 0],'YData',ylims);            set(lAxHGrdLin,'Xdata',xlims,'YData',[0 0]);         end      aaa=0;   end   set(leftEye, 'Ydata', lvData(i), 'Xdata', lhData(i));   set(rightEye, 'Ydata', rvData(i), 'Xdata', rhData(i));   set(leftFov, 'Ydata', lvData(i), 'Xdata', lhData(i));   set(rightFov, 'Ydata', rvData(i), 'Xdata', rhData(i));   set(rightFov, 'Ydata', rvData(i), 'Xdata', rhData(i));   set(whatSampH, 'String', num2str(i));   set(whatTimeH, 'String', num2str(i/samp_freq));   if conjugacy      set(leLine,'Xdata',[lexPOV lhData(i)],'YData',[yPOV lvData(i)]);      set(reLine,'Xdata',[rexPOV rhData(i)],'YData',[yPOV rvData(i)]);      set(tgtL, 'Xdata', stData(i), 'Ydata', svData(i));    else      set(tgtL, 'Xdata', stData(i), 'Ydata', svData(i));      set(tgtR, 'Xdata', stData(i), 'Ydata', svData(i));   end   drawnow   pause2(pauseTime)endset(reAxis,'DrawMode','normal');if ~conjugacy, set(leAxis,'DrawMode','normal'); endset(gcf,'BackingStore', 'on');disp( ['True time of movie: ' num2str(trueTime)])disp( ['Time to play movie: ' num2str(cputime-t)])return