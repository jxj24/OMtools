% textedit.m:  change/delete text properties in a figure% Written by:  Jonathan Jacobs%              March 1997 - June 2002 (last mod: 06/13/02)function textedit(gf)if isempty(get(0,'Child'))   disp('Nothing to edit, dude.')   returnendfontsize=12;txtBG = 'c';txtFG = 'black';if nargin == 0   gf = findHotW;   if gf == -1      disp('No valid plot window found.  Possible reasons:')      disp(' * You don''t have a figure window open.')      disp(' * You are trying to edit a Zoomtool window.')      disp(' * I am having a nervous breakdown.')      return   endendif strcmp( get(gf,'Tag'), 'EditingWindow')   disp( 'Bring a graph window to the front and try again.')   returnend% check if the text editing window is already open% if it is, bring it to the frontwNum = findme('textEditingWindow');if wNum > -1   figure(wNum)   returnendisML5 = 0;mlVers = version;if mlVers(1) >= '5'   isML5 = 1;endscrsize = get(0,'Screensize');mBarHgt = 35;maxHgt = scrsize(4)-mBarHgt;maxWid = scrsize(3);% this little bit of fun is needed because not every child in the figure is an axis.ch = get(gf,'Children');numCh = length(ch);if numCh == 0   disp('Nothing to edit, dude.')   returnendcount = 0;for i = 1:numCh   if strcmpi(get(ch(i),'type'),'axes')      count = count + 1;      tempga(count) = ch(i);      axpos(count,:) = get(tempga(count),'Position');   endendif ~count, disp('No axes found. Quitting.'); return; end% howzabout a rudimentary sorting from top to bottom% and from left to right, in case we've got m x n axes?tempXY = axpos(:,1:2);[~,ind] = sort(tempXY(:,1));ind = flipud(ind);tempXY = tempXY(ind,:);tempga = tempga(ind);[~,ind] = sort(tempXY(:,2));ind = flipud(ind);tempXY = tempXY(ind,:);ga = tempga(ind);numAxes = length(ga);% constants for the extra colorsLASTBUILTINCOLOR = 8;ORANGE = 9;  DKORANGE = 10;LTGRAY = 11; DKGRAY = 12;OTHER = 13;tmpColrStr = blanks(13);teColors = ['k','b','g','c','r','m','y','w','?','*','@','#','$'];teColorStr = ['black        ';'blue         ';'green        ';...   'cyan         ';'red          ';'magenta      ';...   'yellow       ';'white        ';'orange       ';...   'dk. orange   ';'lt. gray     ';'dk. gray     ';...   'off-white    ';'other...     '];% set up the uitextH = zeros(20,numAxes);tempH = [];numText = [];for k = 1:numAxes   childList = get(ga(k),'Children');   tempH = findobj(childList,'type','text');   textH(1,k) = get(ga(k), 'Title');   textH(2,k) = get(ga(k), 'XLabel');   textH(3,k) = get(ga(k), 'YLabel');   zlbl(k)    = get(ga(k), 'ZLabel');   %% get it now, decide to use it later   if isML5      set(textH(1,k),'HandleVisibility','off');      set(textH(2,k),'HandleVisibility','off');      set(textH(3,k),'HandleVisibility','off');      set(zlbl(k),'HandleVisibility','off');  %% set it now, decide otherwise later   end   azel=get(ga(k),'View');   numLabels(k) = 3;   % is it a 3-D graph?   if azel(1) ~= 0  %3-D graph      textH(4,k) = get(ga(k), 'ZLabel');      numLabels(k) = 4;      if isML5         set(textH(4,k),'HandleVisibility','off');      end   end   numText(k) = length(tempH);   if numText(k) > 0      textH(numLabels(k)+1:numText(k)+numLabels(k),k) = tempH;   end   numText(k) = numText(k)+numLabels(k);   numObj(k) = numText(k);   startObj(k) = 1;   stopObj(k) = numText(k);endpop_wid = 115;ctrl_height = 30;fig_width = 565;fig_height = ctrl_height*sum(numText) + 10*(numAxes-1) + 95;% This lets us only show a few axes if we have too much to fit on the screenstartAx=1; stopAx=numAxes;while fig_height>maxHgt && (startAx~=stopAx)   disp('The window required is bigger than the screen.')   %disp('Information will be truncated.')   disp(['There are ' num2str(numAxes) ' axes.  You can select which ones to edit.'])   disp('(Counting goes left to right, and top to bottom, ')   disp('just like natural reading order.)')   startAx=input('Start with axis number: ');   stopAx =input('Stop at axis number: ');   if stopAx<startAx      stopAx=startAx;      disp('Stopping axis must be greater than or equal to starting axis.')   end   numAxes = stopAx-startAx+1;   fig_height = ctrl_height*sum(numText(startAx:stopAx)) + 10*(numAxes-1) + 95;end% We might have too many objects in just one axis so we have to% limit # of objects in the selected axis:if startAx == stopAx && (fig_height > maxHgt)   disp(['There are ' num2str(numObj(startAx)) ' objects in this axis'])   disp('That is too many to display at once.')   while fig_height > maxHgt      startObj =input('Start with object number: ');      stopObj  =input('Stop at object number: ');      if stopObj<startObj         stopObj=startObj;         disp('Stopping axis must be greater than or equal to starting axis.')      end      numObj(startAx) = stopObj-startObj+1;      fig_height = ctrl_height*numObj(startAx) + 10 + 95;      if fig_height > maxHgt         disp('Still too many objects.  Try again...')      end   endend% Set the window position.  Check if the window is already open.% If not, then we will first try to read its last saved position from% the pref file.  If not, we will place it at its default position.% Make sure that it will be drawn completely on the screen.% If not, move it so that it will.dErrFlag=0; fErrFlag=0;if ~exist('teStartXPos','var'),teStartXPos=[]; endif isempty(teStartXPos)   curdir=pwd;   eval(['cd ' '''' matlabroot ''''])   try    cd(findomprefs)   catch, dErrFlag=1;   end   if dErrFlag      mkdir_stat = mkdir('omprefs');      if ~mkdir_stat         disp('** textedit: Unable to create ''omprefs'' dir in MATLAB root dir.')         disp('** You may continue, but prefs will not be saved.')      end   else      try         load tePrefs.mat teStartXPos teStartYPos      catch         fErrFlag=1;      end      if fErrFlag         teStartXPos = 50;         teStartYPos = 100;         save tePrefs.mat teStartXPos teStartYPos      end            % make sure that the window will be on the screen!      if teStartXPos<1,teStartXPos=1;end      if teStartYPos<1,teStartYPos=1;end      if (teStartYPos+fig_height)>maxHgt         teStartYPos=maxHgt-fig_height;      end      if (teStartXPos+fig_width)>maxWid         teStartXPos=maxWid-fig_width;      end   end   eval(['cd ' '''' curdir ''''])endif dErrFlag || fErrFlag   teStartXPos = 20;   teStartYPos = (maxHgt - fig_height)/2;endif ishandle(gf)   fignum=num2str(gf.Number);else   fignum=num2str(gf);endteFig = figure('pos',[teStartXPos, teStartYPos, fig_width, fig_height], ...   'Resize', 'off',...   'Name', ['Text editor: editing figure ' fignum],...   'NumberTitle','off', 'NextPlot','new', ...   'MenuBar','none','Tag','textEditingWindow');% set up the labelsuicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[358 fig_height-25 35 20], 'String', 'Size');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[390 fig_height-25 35 20], 'String', 'Angle');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[423 fig_height-25 80 20], 'String', 'Color');% axis font properties apply to all axes in a figure?y_pos = fig_height-52;uicontrol('Style', 'Frame',...   'Position', [202 y_pos-3 345 ctrl_height], ...   'BackgroundColor',[0.75 0.75 0.75]);uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[205 y_pos+1 110 20],...   'String', 'Tick Labels','FontSize',fontsize, ...   'BackgroundColor','g');edTaxFontH = uicontrol('Style','push','Units','pixels',...   'Position',[320 y_pos 35 25],...   'HorizontalAlignment', 'center',...   'String','Font','FontSize',fontsize, ...   'UserData',ga(1), 'Tag', mat2str([0,0]),...   'Callback',...   'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''axFont'')');%'BackgroundColor',[.5 .5 .5],'ForeGroundColor',txtFG,...edTaxFSzH = uicontrol('Style','edit','Units','pixels',...   'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...   'Position',[360 y_pos 25 25],'HorizontalAlignment', 'center',...   'String',num2str(get(ga(1),'FontSize')),'FontSize',fontsize, ...   'UserData',ga(1), 'Tag', mat2str([0,0]),...   'Callback',...   ['tEditAct(get(gco,''UserData''),get(gco,''Tag''),''axFontS'')']);tcolr = get(ga(1),'XColor');taxBGcolr = tcolr;taxFGcolr = 'k';if sum(tcolr) < 0.3 || strcmpi(tcolr,'k')   taxFGcolr = 'k';   %%%%   taxBGcolr = 'w';   %%%%endif (any(tcolr>0 & tcolr<1))   if all(tcolr==[1 0.5 0])      colrindex = ORANGE;      colorStr = teColors(colrindex);   elseif all(tcolr==[1.0 0.25 0.0])      colrindex = DKORANGE;      colorStr = teColors(colrindex);   elseif all(tcolr==[0.75 0.75 0.75])      colrindex = LTGRAY;      colorStr = teColors(colrindex);   elseif all(tcolr==[0.15 0.15 0.15])      colrindex = DKGRAY;      colorStr = teColors(colrindex);   elseif all(tcolr==[0.94 0.94 0.94])      colrindex = OFFWHITE;      colorStr = teColors(colrindex);   else      colrindex = OTHER;   endelse   colrindex = tcolr(1)*4 + tcolr(2)*2 + tcolr(3) + 1;   colorStr = teColors(colrindex);end% create the popup menuedTaxColrH = uicontrol('Style','popup','Units','pixels',...   'BackgroundColor',[1 1 1],'ForeGroundColor',[0 0 0],...   'Position',[421 y_pos-2  115 25],...   'String',teColorStr, 'FontSize',fontsize, ...   'HorizontalAlignment', 'center',...   'Value', colrindex,...   'UserData',ga(1), 'Tag', mat2str([0,0]),...   'Callback',...   'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''axColr'')');%'BackgroundColor',taxBGcolr,'ForeGroundColor',taxFGcolr,...% modify the popup menuif colrindex == OTHER   % truncate the RGB components to fit w/in 13 chars.   for k=1:3      tempstr = [num2str(tcolr(k)) ' 0 '];      if tempstr(1) == '1'         tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';      else         tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];      end   end   % update the popup string   newColorStr = teColorStr;   newColorStr(OTHER,1:13)=tmpColrStr(1:13);   set(edTaxColrH,'String',newColorStr);   set(edTaxColrH,'Value',OTHER); %% <- bec. of ML4 bugend% set up the uicontrolsy_pos = y_pos - 5;for j = startAx:stopAx   uicontrol('Style','Frame', 'BackgroundColor',[0.75 0.75 0.75], ...      'Position', [2 y_pos-3-numText(j)*ctrl_height 560 numText(j)*ctrl_height])   for i=startObj(j):stopObj(j)      y_pos = y_pos-ctrl_height;      edTxtH(i,j) = uicontrol('Style','edit','Units','pixels',...         'Position',[5 y_pos 310 25],...         'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...         'String',get(textH(i,j),'String'),...         'FontSize',fontsize, ...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback','tEditAct(get(gco,''UserData''),get(gco,''Tag''),''str'')');            edTFontH(i,j) = uicontrol('Style','push','Units','pixels',...         'Position',[320 y_pos 35 25],...         'HorizontalAlignment', 'center',...         'String','Font','FontSize',fontsize, ...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...         'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''font'')');      %'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...            edTFSzH(i,j) = uicontrol('Style','edit','Units','pixels',...         'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...         'Position',[360 y_pos 25 25],...         'HorizontalAlignment', 'center',...         'String',num2str(get(textH(i,j),'FontSize')),...         'FontSize',fontsize, ...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...         'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''fontS'')');            edTRotH(i,j) = uicontrol('Style','edit','Units','pixels',...         'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...         'Position',[390 y_pos 30 25],...         'HorizontalAlignment', 'center',...         'String',num2str(get(textH(i,j),'Rotation')),...         'FontSize',fontsize, ...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...         'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''rot'')');            tcolr = get(textH(i,j),'Color');      tBGcolr = tcolr;      tFGcolr = 'k';      if sum(tcolr)<0.3 || strcmpi(tcolr,'k')         taxFGcolr = 'k';   %%%%         taxBGcolr = 'w';   %%%%      end      if (any(tcolr>0 & tcolr<1))         if all(tcolr==[1 0.5 0])            colrindex = ORANGE;            colorStr = teColors(colrindex);         elseif all(tcolr==[1.0 0.25 0.0])            colrindex = DKORANGE;            colorStr = teColors(colrindex);         elseif all(tcolr==[0.75 0.75 0.75])            colrindex = LTGRAY;            colorStr = teColors(colrindex);         elseif all(tcolr==[0.15 0.15 0.15])            colrindex = DKGRAY;            colorStr = teColors(colrindex);         elseif all(tcolr==[0.94 0.94 0.94])            colrindex = OFFWHITE;            colorStr = teColors(colrindex);         else            colrindex = OTHER;         end      else         colrindex = tcolr(1)*4 + tcolr(2)*2 + tcolr(3) + 1;         colorStr = teColors(colrindex);      end            % create the popup menu      edTColrH(i,j) = uicontrol('Style','popup','Units','pixels',...         'Position',[421 y_pos+3 pop_wid 20],...         'String',teColorStr,'FontSize',fontsize, ...         'HorizontalAlignment', 'center',...         'Value', colrindex,...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...         'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''colr'')');      %'BackgroundColor',tBGcolr,'ForeGroundColor',tFGcolr,...            % modify the popup menu      if colrindex == OTHER         % truncate the RGB components to fit w/in 13 chars.         for k=1:3            tempstr = [num2str(tcolr(k)) ' 0 '];            if strcmpi(tempstr(1),'1')               tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';            else               tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];            end         end         % update the popup string         newColorStr = teColorStr;         newColorStr(OTHER,1:13)=tmpColrStr(1:13);         set(edTColrH(i,j),'String',newColorStr);         set(edTColrH(i,j),'Value',OTHER); %% <- bec. of ML4 bug      end            if i > numLabels(j)         edTDelH(i,j) = uicontrol('Style','push','Units','pixels',...            'Position',[530 y_pos 25 20],...            'String','Del','FontSize',fontsize, ...            'UserData',ga(j), 'Tag', mat2str([i,j]),...            'Callback',...            'tEditAct(get(gco,''UserData''),get(gco,''Tag''),''delete'')');      else         edTDelH(i,j) = 0;      end         end   y_pos = y_pos-10;endy_pos = y_pos-20;doneH = uicontrol('Style','push','Units','pixels',...   'Position',[5 y_pos 50 20],...   'String','Done',...   'UserData',teFig, 'Tag', '[0 0]',...   'Callback','tEditAct(get(gco,''UserData''),get(gco,''Tag''),''done'')');updateH = uicontrol('Style','push','Units','pixels',...   'Position',[65 y_pos 50 20],...   'String','Update',...   'UserData',teFig, 'Tag', '[0 0]',...   'Callback','tEditAct(get(gco,''UserData''),get(gco,''Tag''),''update'')');% set the editing window so that we can't plot anything in itmlVer = version;if mlVer(1) == '4'   set(teFig, 'NextPlot', 'new');elseif mlVer(1) >= '5'   %hideguielse   error('unknown MATLAB version!')end% put these handles and parameters into a cell array and place it into% the 'Text editor' window 'UserData' field.  This replaces the use% of global variables. (6/13/02)teH = {edTaxColrH    edTaxFontH    edTaxFSzH    edTColrH ....   edTDelH       edTFontH      edTFSzH      edTRotH ...   edTxtH        teColors      teColorStr   teFig ...   teStartXPos   teStartYPos   textH};set(teFig,'UserData',teH)%bring graph back to the frontfigure(gf)