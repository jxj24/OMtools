% rotplot.m: rotate your 3D plots...wheee!!!% Written by: Jonathan Jacobs%             January 1996 - July 2002 (last mod: 06/14/02)% 6/14/02 -- converted from global variables to stored handlesfunction rotplot(h)if isempty(get(0,'Child'))   disp('Nothing to edit, buddy.')   returnendif nargin == 0   gf = findHotW;   if gf == -1      disp('No plot window found.')      return   endendif strcmp( get(gf,'Tag'), 'EditingWindow')   disp( 'Bring a graph window to the front and try again.')   returnend% get ML versiontemp = version;mlVer = temp(1);% check if the axis editing window is already open% if it is, bring it to the frontwNum = findme('rotpEditingWindow');if wNum > -1   figure(wNum)   returnendrotfig = gf;figure(gf);h = gca;axes(h);ch=get(gf,'Children');ca=get(gf,'CurrentAxes');% set initial view angles[azel] = get(gca,'View');azm = azel(1);elv = azel(2);% set axes and labels% check to see if the graph already has x,y,z labels% if it does, use them.  Otherwise make new labels.x_labl = get( get(h, 'Xlabel'), 'String' );if isempty(x_labl)   x_labl = 'X axis';   xlabel( x_labl );endy_labl = get( get(h, 'Ylabel'), 'String' );if isempty(y_labl)   y_labl = 'Y axis';   ylabel( y_labl );endz_labl = get( get(h, 'Zlabel'), 'String' );if isempty(z_labl)   z_labl = 'Z axis';   zlabel( z_labl );endx_ax_lims = get(h, 'XLim');y_ax_lims = get(h, 'YLim');z_ax_lims = get(h, 'ZLim');x_ax_low = x_ax_lims(1); x_ax_high = x_ax_lims(2);y_ax_low = y_ax_lims(1); y_ax_high = y_ax_lims(2);z_ax_low = z_ax_lims(1); z_ax_high = z_ax_lims(2);set(h, 'XLim', x_ax_lims, 'YLim', y_ax_lims, 'ZLim', z_ax_lims);% ***************************************************************% do all the ui setup stuff.  it's a bit messy, really.fig_height = 120;fig_width = 500;dErrFlag=0; fErrFlag=0;curdir = pwd;cd(matlabroot)eval(['cd(findomprefs)'], 'dErrFlag=1;')if dErrFlag  mkdir('omprefs')  cd('omprefs')endeval(['load rpPrefs.mat'],'fErrFlag=1;');if ~exist('rpStartXPos'), rpStartXPos = []; endif isempty(rpStartXPos)   rpStartXPos = 20;   rpStartYPos = 40;   save rpPrefs.mat rpStartXPos rpStartYPosendcd(curdir)rpFig = figure('pos',[rpStartXPos, rpStartYPos, fig_width, fig_height],...       'Resize', 'off',...       'Name', ['Rot Plot: editing figure ' num2str(gf)],...       'NumberTitle', 'off',...       'MenuBar', 'none','Tag', 'rotpEditingWindow');rpZoomInH = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[195 30 50 20],...    'String','Zoom In','UserData',h,...    'Callback',[ 'rotButt(''zoomin'');' ]);rpZoomOutH = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[250 30 50 20],...    'String','Zoom Out','UserData',h,...    'Callback',['rotButt(''zoomout'');' ]);% ***************************************************************% the view buttons% view as (x, y, z)h3D = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[10 30 40 20],...    'String','3-D','UserData',h,...    'Callback',[ 'rotButt(''3D'');'] );% view as (y, z)hYvsZ = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[55 30 40 20],...    'String','(y, z)','UserData',h,...    'Callback',[ 'rotButt(''YvsZ'');'] );% view as (x, y)hXvsY = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[100 30 40 20],...    'String','(x, y)','UserData',h,...    'Callback',[ 'rotButt(''XvsY'');'] );% view as (x, z)hXvsZ = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[145 30 40 20],...    'String','(x, z)','UserData',h,...    'Callback',[ 'rotButt(''XvsZ'');'] );% ***************************************************************% create the azimuth sliderif azm > 180, azm=azm-360;endsli_azm = uicontrol(rpFig, 'Style', 'slider',...   'Position', [ 55 60 190 20],...   'Min', -180, 'Max', 180, 'Value', azm,...   'Callback',[ 'rotButt(''sli_azm'');']);% create the elevation sliderif elv > 180, elv=elv-360;endsli_elv = uicontrol(rpFig, 'Style', 'slider',...   'Position', [55 85 190 20],...   'Min', -180, 'Max', 180, 'Value', elv,...   'Callback',[ 'rotButt(''sli_elv'');']);% ***************************************************************% create the 'azimuth' labelazm_label = uicontrol(rpFig, 'Style', 'text',...   'Pos', [10 60 40 20],...   'String', 'Azim.');   % create the 'elevation' labelelv_label = uicontrol(rpFig, 'Style', 'text',...   'Pos', [10 85 40 20],...   'String', 'Elev.');% ***************************************************************% set the 'azimuth' dataazm_cur = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [250 60 50 20],...   'String', num2str(get(sli_azm, 'Value')),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''azm_cur'');']);% set the 'elevation' dataelv_cur = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [250 85 50 20],...   'String', num2str(get(sli_elv, 'Value')),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', [ 'rotButt(''elv_cur'');'] );% *******************************************************************% set the X, Y, Z axis limsrpXLowH = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [400 80 45 20],...   'String', num2str(x_ax_low),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''xLow'');'] );rpXHighH = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [450 80 45 20],...   'String', num2str(x_ax_high),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''xHigh'');'] );rpYLowH = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [400 50 45 20],...   'String', num2str(y_ax_low),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''yLow'');'] );rpYHighH = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [450 50 45 20],...   'String', num2str(y_ax_high),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''yHigh'');'] );rpZLowH = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [400 20 45 20],...   'String', num2str(z_ax_low),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''zLow'');'] );rpZHighH = uicontrol(rpFig, 'Style', 'edit',...   'Pos', [450 20 45 20],...   'String', num2str(z_ax_high),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Callback', ['rotButt(''zHigh'');'] );% ***************************************************************% create the 'limits' labelsxLimLabel = uicontrol(rpFig, 'Style', 'text',...   'Pos', [320 80 70 20],...   'String', 'X axis limits');yLimLabel = uicontrol(rpFig, 'Style', 'text',...   'Pos', [320 50 70 20],...   'String', 'Y axis limits');zLimLabel = uicontrol(rpFig, 'Style', 'text',...   'Pos', [320 20 70 20],...   'String', 'Z axis limits');% ***************************************************************% quit and clean uprpQuitH = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[40 2 40 20],...    'String','Quit','UserData',h,...    'Callback',[ 'rotButt(''quit'');' ]);rpUpdateH = uicontrol(rpFig, 'Style','Pushbutton','Units','pixels',...    'Position',[90 2 40 20],...    'String','Update','UserData',h,...    'Callback',[ 'rotButt(''update'');' ]);% set the editing window so that we can't plot anything in itmlVer = version;if mlVer(1) == '4'   set(rpFig, 'NextPlot', 'new'); elseif mlVer(1) >= '5'   %hidegui else   error('unknown MATLAB version!')   returnend% put these handles and parameters into a cell array and place it into% the 'Rotate' window 'UserData' field.  This replaces the use% of global variables. (6/13/02)rpH = {sli_azm      sli_elv      azm_cur      elv_cur    ....       elv          azm          rotfig       rpFig      ....       rpXHighH     rpXLowH      rpYHighH     rpYLowH    ....       rpZHighH     rpZLowH      h3D          hXvsY      ....       hYvsZ        hXvsZ        rpZoomInH    rpZoomOutH ....       rpQuitH      rpUpdateH    rpStartXPos  rpStartYPos};set(rpFig,'UserData',rpH)