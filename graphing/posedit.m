% posedit.m:   change/delete the position & size of a plot% or the figure's paper orientation% Written by:  Jonathan Jacobs%              March 1997 - February 2006  (last mod: 02/14/06)function posedit(gf)if isempty(get(0,'Child'))   disp('Nothing to edit, fella.')   returnendif nargin == 0   gf = findHotW;   if gf == -1      disp('No valid plot window found.  Possible reasons:')      disp(' * You don''t have a figure window open.')      disp(' * You are trying to edit a Zoomtool window.')      disp(' * I am having a nervous breakdown.')      return   endendcomp = computer;ver=version;if lower(comp(1)) == 'm'   if ver(1)>=6      newLine = 10;   else      newLine = 13;   endelse   newLine = 13;endif strcmp( get(gf,'Tag'), 'EditingWindow')   disp( 'Bring a graph window to the front and try again.')   returnendtextsize = 12;txtBG = 'cyan';txtFG = 'black';% check if the position editing window is already open% if it is, bring it to the frontwNum = findme('posiEditingWindow');if wNum > -1   figure(wNum)   returnendfontsize=12;scrsize = get(0,'Screensize');maxHgt = scrsize(4)-35;  %% make room for the menu barmaxWid = scrsize(3);% this little bit of fun is needed because not every child in the figure is an axis.ch = get(gf,'Children');numCh = length(ch);if numCh == 0   disp('Nothing to edit, fella.')   returnendcount = 0;for i = 1:numCh   if strcmpi(get(ch(i),'type'),'axes')      count = count+1;      tempga(count) = ch(i);      original_ax_units{count} = get(tempga(count),'Units');      set(tempga(count),'Units','Normalized');      axpos(count,:) = get(tempga(count),'Position');      set(tempga(count),'Units',original_ax_units{count});   endendif ~count, disp('No axes found. Quitting.'); return; end% howzabout a rudimentary sorting from top to bottom% and from left to right, in case we've got m x n axes?% Hey jackass! This will only work if ALL the axes use the same units!!!% need to convert to a common unit before sorting.  Can't believe this took% seven years to figure out.% Fixed!!! by use of 'original_ax_units' in above loop.tempXY = axpos(:,1:2);[~,ind] = sort(tempXY(:,1));ind = flipud(ind);tempXY = tempXY(ind,:);tempga = tempga(ind);[~,ind] = sort(tempXY(:,2));ind = flipud(ind);tempXY = tempXY(ind,:);ga = tempga(ind);numAxes = length(ga);peGAH = ga;% set up the uifig_width = 335;fig_height = (30*numAxes) + 135;if fig_height>maxHgt   disp('The window is bigger than the screen.  Information will be truncated.')end% Set the window position.  Check if the window is already open.% If not, then we will first try to read its last saved position from% the pref file.  If not, we will place it at its default position.% Make sure that it will be drawn completely on the screen.% If not, move it so that it will.dErrFlag=0; fErrFlag=0;if ~exist('peStartXPos','var'),peStartXPos=[]; endif isempty(peStartXPos)   curdir=pwd;   cd(matlabroot)   try      cd(findomprefs)   catch      dErrFlag=1;   end   if dErrFlag      mkdir_stat = mkdir('omprefs');      if ~mkdir_stat         disp('** posedit: Unable to create ''omprefs'' dir in MATLAB root dir.')         disp('** You may continue, but prefs will not be saved.')      end   else      try    load pePrefs.mat peStartXPos peStartYPos      catch, fErrFlag=1;      end      if fErrFlag         peStartXPos = 50;         peStartYPos = 100;         save pePrefs.mat peStartXPos peStartYPos      end            cd(curdir)      % make sure that the window will be on the screen!      if peStartXPos<1,peStartXPos=1;end      if peStartYPos<1,peStartYPos=1;end      if (peStartYPos+fig_height)>maxHgt         peStartYPos=maxHgt-fig_height;      end      if (peStartXPos+fig_width)>maxWid         peStartXPos=maxWid-fig_width;      end   end   cd(curdir)endif dErrFlag || fErrFlag   peStartXPos = 20;   peStartYPos = (maxHgt - fig_height)/2;endif ishandle(gf)   fignum=num2str(gf.Number);else   fignum=num2str(gf);endpeFig = figure('pos',[peStartXPos, peStartYPos, fig_width, fig_height],...   'Resize', 'off','NextPlot','new',...   'Name', ['Editing Position for fig ' fignum],...   'NumberTitle', 'off','MenuBar', 'none','Tag', 'posiEditingWindow');% set up the labelsy_pos = fig_height-25;uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[  5 y_pos 50 20], 'String', 'X origin');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[ 60 y_pos 50 20], 'String', 'Y origin');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[ 115 y_pos 50 20], 'String', 'Width');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[ 170 y_pos 50 20], 'String', 'Height');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[ 230 y_pos 85 20], 'String', 'Axis Units');% set up the uicontrolsoldUnits = [];axunits = zeros(1,numAxes);for i=1:numAxes   %temp = get(ga(i), 'Units');   %oldUnits(i,:) = [temp, blanks(10-length(temp))];   %set(ga(i), 'Units', 'inches');   gpos(i,:) = get(ga(i), 'Position');      y_pos = y_pos-30;   uicontrol('Style','frame','pos',[3 y_pos-2 330 29],...      'BackgroundColor',[0.75 0.75 0.75]);   for j = 1:4      axPosH(i,j) = uicontrol('Style','edit','Units','pixels',...         'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...         'Position',[5+(55*(j-1)) y_pos 50 25],...         'String',num2str(gpos(i,j),4),'FontSize',fontsize, ...         'UserData',ga(i), 'Tag', mat2str([i,j]),...         'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''axPos'')');   end      axUnitStr = get(ga(i),'units');   switch axUnitStr(1)      case 'n'         axunits(i) = 1;      case 'p'         axunits(i) = 2;      case 'i'         axunits(i) = 3;      case 'c'         axunits(i) = 4;   end   peAxUnitsH(i) = uicontrol('Style','popup','Units','pixels',...      'Position',[222 y_pos+3 113 20], 'Value', axunits(i),...      'String','normalized|pixels|inches|centimeters','FontSize',fontsize, ...      'UserData',ga(i), 'Tag', mat2str([i i]),...      'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''axunits'')');      %'BackgroundColor','cyan','ForeGroundColor','black',...   end%oldUnits = char(oldUnits);  %% for ML5!y_pos = y_pos - 30;orientStr = lower(get(gf,'PaperOrientation'));if strcmpi(orientStr(1),'p')   orientVal = 2;else   orientVal = 1;enduicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[  5 y_pos 105 20], 'String', 'Page (X,Y) origin');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[ 115 y_pos 50 20], 'String', 'Width');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[170 y_pos 50 20], 'String', 'Height');uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[230 y_pos 85 20], 'String', 'Page Units');% add the page boundary controly_pos = y_pos - 29;pgpos = get(gf, 'PaperPosition');uicontrol('Style','frame','pos',[3 y_pos-2 330 29],...      'BackgroundColor',[0.75 0.75 0.75]);pgUnitStr = get(gf,'PaperUnits');switch pgUnitStr(1)   case'n'      pgunits(i) = 1;   case 'i'      pgunits(i) = 2;   case 'c'      pgunits(i) = 3;endpePgUnitsH(i) = uicontrol('Style','popup','Units','pixels',...   'BackgroundColor','cyan','ForeGroundColor','black',...   'Position',[222 y_pos+3 113 20],...   'Value', pgunits(i),...   'String','normalized|inches|centimeters','FontSize',fontsize, ...   'UserData',ga(i), 'Tag', mat2str([i i]),...   'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''pgunits'')');for i=1:4   pgPosH(i) = uicontrol('Style','edit','Units','pixels',...      'BackgroundColor',txtBG,'ForeGroundColor',txtFG,...      'Position',[5+(55*(i-1)) y_pos 50 25],...      'String',num2str(pgpos(i),3),'FontSize',fontsize, ...      'UserData',ga(1), 'Tag', mat2str([0,i]),...      'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''pgPos'')');enduicontrol('Style', 'text', 'Units', 'pixels',...   'Position', [85 y_pos-45 200 35],...   'HorizontalAlignment','left',...   'Str',['   Page' char(newLine) '   Orientation'],'FontSize',fontsize);orientH = uicontrol('Style','popup','Units','pixels',...   'BackgroundColor','cyan','ForeGroundColor','black',...   'Position',[170 y_pos-40 110 25],...   'String','landscape|portrait','FontSize',fontsize, ...   'Value', orientVal,...   'HorizontalAlignment', 'center',...   'UserData',ga(1), 'Tag', mat2str([0 0]),...   'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''orient'')');y_pos = y_pos-25;updateH = uicontrol('Style','push','Units','pixels',...   'Position',[5 y_pos 50 20],...   'String','Update',...   'UserData',ga(1), 'Tag', '[0 0]',...   'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''update'')');y_pos = y_pos-25;doneH = uicontrol('Style','push','Units','pixels',...   'Position',[5 y_pos+2 50 20],...   'String','Done',...   'UserData',ga(1), 'Tag', mat2str([0 0]),...   'Callback','pEditAct(get(gco,''UserData''),get(gco,''Tag''),''done'')');% put these handles and parameters into a cell array and place it into% the 'Position editor' window 'UserData' field.  This replaces the use% of global variables. (6/13/02)peH = {axPosH       oldUnits    orientH       peAxUnitsH ...   peFig        peGAH       pePgUnitsH    peStartXPos ...   peStartYPos  pgPosH};set(peFig, 'UserData', peH)%bring graph back to the front%figure(gf)