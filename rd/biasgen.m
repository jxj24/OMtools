% biasgen.m: generate an adjust bias file.% Usage: biasgen% You will be prompted for all relevant information.% Don't lie to the computer; that's not nice.% Written by:  Jonathan Jacobs%              August 1998 - September 2010 (last mod: 09/10/10)%% modified by King Yi%             07/01/11  - Updated horizontal and vertical stim scale factors.function biasfile = biasgen( subjstr )[comp, ~] = computer;if strcmp( comp(1),'M' )   CR = char(13);else   CR = char([13 10]);end%vers = version;%vers = str2double(vers(1));biasfile = 'file_not_created';oldpath = pwd;if nargin == 0   subjstr = input('Enter the data file series name: ','s');endnamestr = input('Enter the subject''s name: ','s');%namestr_rot13 = ['___' rot13(namestr)];commentstr3 = input('Enter any comments: ','s');numrecs = input('Enter the number of records: ');%%%use a preset?preset=0;disp('Lab-specific presets:')disp(' 1: OMlab Eyelink II system (8-chan).')disp(' 2: Imported from EDF (binocular).')disp(' 3: Imported TEXT file (coming soon)')disp(' 4: Old OMlab RTRV format (maybe never)')disp(' 5: Let me roll my own.')while preset<1 || preset>5, preset=input(' --> '); end%h_adjstr = '  0   [15 20 25 30] 1 1 1 1  [-15 -20 -25 -30] 1 1 1 1';adjstr = '  0   [10]  1  [-10]  1';switch preset   case 1      mstr = 'VID'; format = 'L'; sampfstr = ''; exten = '.lab';      fstr = 'LabVIEW'; orgstr = '';      chan_count = 8;      chanstr = ['rh';'lh';'st';'rv';'lv';'sv';'ds';'tl'];         case 2      mstr = 'VID'; format = 'B'; exten = '.bin';      fstr = 'RAWBIN'; orgstr = 'Contiguous';      chan_count = 4;      chanstr = ['lh';'rh';'lv';'rv'];      sampfstr = num2str(input('Enter the sampling frequency: '));         case 3      disp('coming soon')      return      mstr = 'VID'; format = 'a'; exten = '.txt';      fstr = 'ASCII'; orgstr = '';      chan_count = 4;      chanstr = ['lh';'rh';'lv';'rv'];      sampfstr = num2str(input('Enter the sampling frequency: '));         case 4      disp('coming soon')      return      mstr = 'VID'; format = 'a'; exten = '.txt';      fstr = 'ASCII'; orgstr = '';      chan_count = 4;      chanstr = ['lh';'rh';'lv';'rv'];      sampfstr = num2str(input('Enter the sampling frequency: '));         case 5      method = lower(input('Method: (R)obinson coil, (C)ollewijn coil, (I)R or (V)ideo? ','s'));      format = lower(input('Format: (L)abVIEW, (R)TRV, (O)ber, (A)SCII or (B)inary? ','s'));      switch method         case {'i', 'v'}                % asymmetric cal types            if strcmp(method,'i'), mstr = 'IR'; end            if strcmp(method,'v'), mstr = 'VID'; end         case 'c'            mstr = 'COIL';            %scalestr = input('Enter scale factor (Default = 1): ','s');            %if isempty(scalestr), scalestr = '1'; end            adjstr = '  0   1';         case 'r'            mstr = 'RCoil';            calptstr = input('Enter calibration pt: ','s');            adjstr = ['  0   Inf   ' calptstr];      end            switch format         case 'a'            sampfstr = num2str(input('Enter the sampling frequency: '));            exten = '.txt'; fstr = 'ASCII'; orgstr = '';         case 'l'            sampfstr = ''; exten = '.lab'; fstr = 'LabVIEW'; orgstr = '';         case 'o'            sampfstr = ''; exten = '.obr'; fstr = 'Ober'; orgstr = '';         case 'r'            sampfstr = ''; exten = '.dat'; fstr = 'RTRV'; orgstr = '';         case 'b'            sampfstr = num2str(input('Enter the sampling frequency: '));            disp('If you are not sure, choose C')            organized = lower(input('Channel structure: (I)nterleaved or (C)ontiguous? ','s'));            exten = '.bin'; fstr = 'RAWBIN';            if strcmp( organized(1), 'i')               orgstr = '  Interleaved';            elseif strcmp( organized(1), 'c')               orgstr = '  Contiguous';            else               orgstr = '  Unknown';            end      end            flag0 = 0; chanstr = '--';      chan_count = input('Enter the number of channels: ');            switch chan_count         case 8            temp = 0;            if strcmp(format, 'l') && strcmp(method,'v')               temp=1;               disp('Assuming channels: rh lh st rv lv sv ds tl');            else               disp('1.  rh lh st rv lv sv ds tl  (EyeLink II)');               disp('2.  rh lh hh rv lv hv rt lt  (Coil)');               disp('3   other');            end            while (temp<1) || (temp>3)               temp = input('Select: ');            end            switch temp               case 1                  chanstr = ['rh';'lh';'st';'rv';'lv';'sv';'ds';'tl'];               case 2                  chanstr = ['rh';'lh';'hh';'rv';'lv';'hv';'rt';'lt'];               case 3                  flag0 = 1;            end         case 6            temp = 0;            if strcmp(format, 'o')               temp=1;            elseif strcmp(format,'l')               temp=2;            else               disp('1.  st rh lh sv rv lv  (Ober2)');               disp('2.  rh lh st rv lv sv  (EyeLink 2)');               disp('3   other');            end            while (temp<1) || (temp>3)               temp = input('Select: ');            end            switch temp               case 1                  chanstr = ['st';'rh';'lh';'sv';'rv';'lv'];               case 2                  chanstr = ['rh';'lh';'st';'rv';'lv';'sv'];               case 3                  flag0 = 1;            end         case 4            temp = 0;            if strcmp(format,'o')               temp=1;            else               disp('1.  rh lh rv lv  (Ober2)');               disp('2.  lh rh lv rv ');               disp('3   other');            end            while (temp<1) || (temp>3)               temp = input('Select: ');            end            switch temp               case 1                  chanstr = ['rh';'lh';'rv';'lv'];               case 2                  chanstr = ['lh';'rh';'lv';'rv'];               case 3                  flag0 = 1;            end         case 3            temp = 0;            if strcmp(format, 'l')               temp=1;            else               disp('1.  rh lh st  (IR Labview)');               disp('2.  st rh lh  (IR RTRV)');               disp('3   other');            end            while (temp<1) || (temp>3)               temp = input('Select: ');            end            switch temp               case 1                  chanstr = ['rh';'lh';'st'];               case 2                  chanstr = ['st';'rh';'lh'];               case 3                  flag0 = 1;            end         case 2            temp = 0;            if strcmp(format,'o')               temp=1;            elseif strcmp(format,'l')               temp=2;            else               disp('1.  lh rh   (Ober2)');               disp('2.  rh lh   (LabVIEW)');               disp('3   other');            end            while (temp<1) || (temp>3)               temp = input('Select: ');            end            switch temp               case 1                  chanstr = ['lh';'rh'];               case 2                  chanstr = ['rh';'lh'];               case 3                  flag0 = 1;            end         otherwise            flag0 = 1;            disp('No channel names known.')            chanstr = '--';      end            if flag0 == 1         for i=1:chan_count            temp=input(['Enter the two-letter name for channel ' num2str(i) ': '],'s')'';            chanstr(i,1:2) = temp(1:2);         end      end      end % switch preset%chop off any trailing underscore for now. We will add it back when neededstripped_uscore = 0;if subjstr(end)=='_'   subjstr = subjstr(1:end-1);   stripped_uscore = 1;endadjbiasname = ['adjbias_' subjstr '.txt'];[filename, path] = uiputfile('*.*','Select the directory to write the adjust file.', adjbiasname);if ~strcmpi( filename(end-3:end), '.txt')   filename = [filename '.txt'];endif filename == 0   disp('Cancelling.')   returnend%cd(path)fid = fopen([path filename], 'wt');a = exist('time','file');if a == 2   dstr = [' on ' time('d',1,24,1)];   tstr = [' at ' time('t',1,24,1)];else   dstr = '';   tstr = '';end% commentstr3 is input at beginning of programcommentstr1 = '% automagically generated by "biasgen"';commentstr2 = ['%' dstr tstr];%%% 'st' recalibration factors updated 03/04/10.%%% 'st' recalibration factors updated 07/01/11.%commentstr4 =  '% These adjustments are custom to OMlab'' Video/IR room.  Feel free to substitute your own.';%commentstr4a = '% Hor Stim Scale Factors (±15-30¡) as of 1 July 2011: ';%commentstr4b = '%   st	 -3.4651  [15 20 25 30]	0.982 0.9953 1 1.015	[-15 -20 -25 -30]	0.982 0.994 1.001 1';%%% 'sv' zero shift depends on galvo vertical offset.%%% will try to have LabVIEW write it to header, or (even better) correct for it before writing to file%commentstr5a = '% Vrt Stim Scale Factors (±10¡) as of 1 July 2011: ';%commentstr5b = '%   sv	 -1.9135  [10]	0.9987	[-10]	1.036';%commentstr6 = '% Files: 1-REcal; 2-LEcal; 3-BEgangle; 4-Rgaze; 5-Lgaze; 6-VrgSteps; 7-FNF; 8-SP; 9-SP; 10-Fix';fwrite(fid, [commentstr1 CR]);fwrite(fid, [commentstr2 CR]);fwrite(fid, ['% ' namestr CR]);%fwrite(fid, ['% ' namestr_rot13 CR]);fwrite(fid, ['% ' commentstr3 CR]);% fwrite(fid, [commentstr4  CR]);% fwrite(fid, [commentstr4a CR]);% fwrite(fid, [commentstr4b CR]);% fwrite(fid, [commentstr5a CR]);% fwrite(fid, [commentstr5b CR]);% fwrite(fid, [commentstr6 CR]);fwrite(fid, CR);% now we can add the underscore back if needed.if isdigit(subjstr( end )) || stripped_uscore == 1   subjstr = [subjstr '_'];endfor i = 1:numrecs   firstline = [subjstr num2str(i) exten '  ' num2str(chan_count) '  '...      mstr '  ' fstr ' ' sampfstr ' ' orgstr  CR];   fwrite(fid,firstline);   for j = 1:chan_count      nextline = [chanstr(j,1:2) '  ' adjstr CR];  % used to place 'sampfstr' here.      fwrite(fid, nextline);   end   fwrite(fid, CR);endfclose(fid);disp(['Adjust bias file written as ' path filename]); disp(' ')disp('   P.S.: Don''t panic if you think you messed up.')disp('   You can manually edit the bias file using any text editor,')disp('   so you can tweak any values afterwards.')disp(' ')try   cd(oldpath)catch   cd(dataroot)endif nargout==0   clear biasfileelse   biasfile = [path filename];end