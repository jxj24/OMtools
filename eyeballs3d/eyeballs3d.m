% eyeballs3D: draws a pair of eyeballs and animates them using% eye movement data in memory.  The data must be composed of up% to six equal-length vectors (lh, lv, lt, rh, rv, rt) that must% be declared as global variables before they are read in.  Additionally,% the sampling frequency, 'samp_freq' must also be a global variable.% Optionally, if there are horizontal and vertical stimuli data,% they can be displayed in their respective planes by making 'st' and 'sv'% global variables, too. % Written by: Jonathan Jacobs%             March 2002 - May 2005 (last mod: 05/13/05)% Files necessary for proper operation:%   'eyeballs3d', 'ebAct3D.m', 'datscale.m', 'd2pt.m', 'axispad.m',%   'xyplotsettings.m', 'ebdatacheck.m', 'ebdataload.m'% If you have received this as a '.p' (pseudocode) file, all the% above-mentioned functions will also be '.p' files.  (And you shouldn't% even be reading this?)%%% Major updates and fixes:% 27 Nov 02: Added alignment crosshairs.  May eventually make them%  2 Dec 02: Added 'crossH' variable; allow turning crosshairs on/off %            The wform, monitor and control windows created at proper size,%              rather than resizing them after creation.% 29 May 03: Massive redesign of GUI, relocation of many controls%            Added user-customizable XY plot settings.%            'play' reads settings from XY plot's axis and applies values%              to XY plot playback%  2 Jun 03: Major revision now allows loading of new data w/o having to %              close and re-run 'eyeballs3d'%  5 Jun 03: User can now select arrays from the base workspace for XY plot% 16 Jul 03: Added optional display of stimulus data% 14 Oct 03: Added rubberband zoom% 12 Jan 05: Rewrote movie making code, prefs.  reorganized movie prefs.%            Render animation using 'zbuffer' workaround for 'OpenGL' bug.  %            User can now specify QT (if available), AVI, or series of JPEGs% 21 Jan 05: Eyeball and waveform windows are now easily resizable via %              slider/text box controls% 28 Jan 05: Thanks to effing Microsoft's crap handling of non-native graphics%					and movie formats, eyeballs now can be rendered w/o grid lines%              so the drastically reduced quality in PowerPoint is not as easily%              noticable.% 09 May 05: Zillions of little fixes.  changed wf window axes positions and %					sizes for appearance improvement at smaller window sizes.%              see ebact3d and xyplotsettings for more extensive improvements%              function eyeballs3D(null)global rh lh rv lv rt lt st sv samp_freqf_size = 8;% look for the open windowsefig = -1; cfig = -1; wfig = -1; sfig = -1; xyfig=-1;wl = get(0,'Children');for i = 1:length(wl)   if strcmp(get(wl(i),'Name'),'Eye Monitor'),           efig=wl(i); end   if strcmp(get(wl(i),'Name'),'Eye Monitor Control'),   cfig=wl(i); end   if strcmp(get(wl(i),'Name'),'Waveform Monitor'),      wfig=wl(i); end   if strcmp(get(wl(i),'Name'),'Data Scaling & Offset'), sfig=wl(i); end   if strcmp(get(wl(i),'Name'),'XY Plot settings'),   	xyfig=wl(i); endendif efig>0 & cfig>0 & wfig>0   figure(cfig);   return;end% center the three windows we are about to create (if not using saved pos)screensize=get(0,'ScreenSize');initpos = [fix((screensize(3)-914)/2) fix((screensize(4)-535)/2)]; % center it% look for a preference file.% if there is no 'omPrefs' folder in the MATLAB root, we will% create one and also create a prefs file.cur_dir = pwd;%cd(matlabroot)gp_err=0;eval('cd(findomprefs)','gp_err=1;')if gp_err % must make a omPrefs directory   mkdir('omPrefs')   cd('omPrefs')end% default pref valueseyeColor = [0.4431 0.5961 0.3686];efigpos  = [initpos+[0 243]  570 264];cfigpos  = [initpos+[44 -50]   540 230];wfigpos  = [initpos+[600 0]  300 507];wf_center = [ initpos/2+450, initpos/2+253 ];eb_size = 1;wf_size = 1;eyeliner = 0;eyelight = 1;%dfigpos  = [initpos+[115 -90]  400 90];%xyfigpos = [initpos+[115 -300]  300 200];% default movie prefsqtcompressor = 2;      % 1=video, 2=jpeg, 3=animationspatialqual  = 3;      % 1=min, 2=low, 3=normal, 4=high, 5=max, 6=losslessmakeqtmovie  = 0;imageformat  = 1;movie_speed  = 1;make_avi     = 0;make_stills  = 1;% if there is not a good pref file, create one w/the default valuespref_err=0;eval('load(''ebPrefs.mat'')','pref_err=1;')   if pref_err   disp('pref_err!')   save ebPrefs.mat eyeColor efigpos cfigpos wfigpos wf_center ...   qtcompressor spatialqual makeqtmovie imageformat ...   movie_speed make_avi make_stills eb_size wf_size ...   eyeliner eyelightendmovPrefs = {qtcompressor, spatialqual, makeqtmovie, ...              imageformat, movie_speed, make_avi make_stills};if exist(cur_dir,'dir'), cd(cur_dir); end% is there good data loaded into memory?[status, datlen, noHOR, noVRT, noTOR, noSTM] = ebdatacheck;if status==0   disp('calling ''ebdataload'' to read in valid data.')    ebdataload   [status, datlen, noHOR, noVRT, noTOR, noSTM] = ebdatacheck;   if status==0, disp('not valid data. RTFM.'); return; endendif noHOR, plotHorEnab = 'off'; else plotHorEnab = 'on'; endif noVRT, plotVrtEnab = 'off'; else plotVrtEnab = 'on'; endif noTOR, plotTorEnab = 'off'; else plotTorEnab = 'on'; endif noSTM, plotStmEnab = 'off'; else plotStmEnab = 'on'; end% ***************************************************************% ***************************************************************% **                    open your eyes!                        **% ***************************************************************% ***************************************************************%%% 01/14/05: changed 'renderer' to 'zbuffer' because 'opengl' is broken.efig = figure('Position',efigpos, ...              'Name',['Eye Monitor'],'NumberTitle','off', ...              'DeleteFcn','ebAct3D(''done!'')', ...              'renderer','zbuffer',...              'resize','off',...              'Menubar','none','Tag','Eyeballs3D: uneditable',...              'color',[0.75 0.75 0.75] );%set(efig,'backingstore','off')% easier and more reliable than using 'subplot' command% which causes all sorts of hilarity: axes disappear.  Really!odSocket = axes('position', [0.025 0.05 0.45 0.87]);osSocket = axes('position', [0.536 0.05 0.45 0.87] );badge    = axes('position', [0.0 0.95 0.1 0.05]   );overlay  = axes('position', [0.025 0.05 0.95 0.87]);% eyeColor was loaded earlier, or was set to default color%mrkrFClr = min([1 1 1], 1.25*eyeColor);%mrkrEClr = max([0 0 0], 0.8*eyeColor);mrkrEClr = [1 0 0];mrkrFClr = [1 0 0];visStr = {'off','on'};v_viewoff = 10;hor = 0; vrt = 0; tor=0;% plot the text ID badgeaxes(badge)axis offbtxt=text(0.05,0.2,'(c) DD\_OMLAB');set(btxt,'FontSize',10,'Color',[0 0 1]);%btxt=text(8.7,0.2,'www.omlab.org');%set(btxt,'FontSize',10,'Color',[0 0 1]);ebmap = ones(128,3);if eb_size >= 0.8   % bigger eyeball and its torsion triangle vertices	[z,y,x]=sphere(40);	a=[x(32,31) x(32,21) x(32,11) x(32,1)];	b=[y(32,31) y(32,21) y(32,11) y(32,1)];	c=[z(32,31) z(32,21) z(32,11) z(32,1)];	ebmap(127:128,:) = zeros(2,3);	ebmap(119:126,1) = eyeColor(1);	ebmap(119:126,2) = eyeColor(2);	ebmap(119:126,3) = eyeColor(3); elseif eb_size >= 0.5	% medium eyeball and its torsion triangle vertices	[z,y,x]=sphere(24);	a=[x(20,19) x(20,13) x(20,7) x(20,1)];	b=[y(20,19) y(20,13) y(20,7) y(20,1)];	c=[z(20,19) z(20,13) z(20,7) z(20,1)];	ebmap(126:128,:) = zeros(3,3);	ebmap(117:125,1) = eyeColor(1);	ebmap(117:125,2) = eyeColor(2);	ebmap(117:125,3) = eyeColor(3);endset(efig,'Colormap', ebmap)% put the right eye in its socketaxes(odSocket)od=surf(x,y,z,x);if eyeliner == 0   set(od,'LineStyle','none') else   set(od,'LineStyle','-')endset(od,'UserData',eyeColor)set(odSocket,'view',[hor+90 vrt]);set(odSocket,'UserData',0);axis equal; axis off axis vis3dhold on%odMrkr=patch(a,b,c,mrkrClr);odMrkr=plot3(a,b,c,'Markersize',10,...          'LineStyle','none','visible',visStr{~noTOR+1},...			 'Marker','diamond', 'MarkerSize', 6,...          'MarkerFaceColor',mrkrFClr,'MarkerEdgeColor',mrkrEClr);odLightH=0;if eyelight == 1   odLightH = camlight(0, 10);   %odLight2 = camlight(0, 20);endmaterial('dull')lighting('gouraud')% put the left eye in its socketaxes(osSocket)os=surf(x,y,z,x);if eyeliner == 0   set(os,'LineStyle','none') else   set(os,'LineStyle','-')end%set(os,'CData',cdata);set(os,'UserData',eyeColor)set(osSocket,'view',[hor+90 vrt]);set(osSocket,'UserData',0);axis equal; axis off axis vis3dhold on%osMrkr=patch(a,b,c,mrkrClr);osMrkr=plot3(a,b,c,'MarkerSize',10,...          'LineStyle','none','visible',visStr{~noTOR+1},...			 'Marker','diamond', 'MarkerSize', 6,...          'MarkerFaceColor',mrkrFClr,'MarkerEdgeColor',mrkrEClr);osLightH=0;if eyelight == 1	osLightH = camlight(0, 10);	%osLight2 = camlight(0, 20);endmaterial dulllighting('gouraud')% draw alignment crosshairs (added 11/27/02)axes(overlay)hold onaxis offaxis([0 1  0 1])% the middle of each pupil.  (majick numbers)ODctr = [0.2375, 0.5];OSctr = [0.776 , 0.5];hLen = 0.035;vLen = 0.085;% draw the horizontals...chLineH(1) = line([ODctr(1)-hLen ODctr(1)+hLen], [ODctr(2) ODctr(2)], 'color','y');chLineH(2) = line([OSctr(1)-hLen OSctr(1)+hLen], [OSctr(2) OSctr(2)], 'color','y');% ...and the verticalschLineH(3) = line([ODctr(1) ODctr(1)], [ODctr(2)-vLen ODctr(2)+vLen], 'color','y');chLineH(4) = line([OSctr(1) OSctr(1)], [OSctr(2)-vLen OSctr(2)+vLen], 'color','y');eH = [osSocket os osMrkr odSocket od odMrkr overlay];set(efig,'UserData', eH)% ***************************************************************% ***************************************************************% **               create the controls window                  **% ***************************************************************% ***************************************************************cfig = figure('Resize','off','Position', cfigpos, ...              'Name',['Eye Monitor Control'],'NumberTitle','off', ...              'Menubar','none','Tag','Eyeballs3D control',...              'DeleteFcn','ebAct3D(''done!'')' );cfig_height = cfigpos(4);uicontrol(cfig,'Style','Frame','Units', 'pixels',...   'BackgroundColor',[0.25 0.25 0.25],'Position',[4 cfig_height-110 370 107])uicontrol(cfig,'Style','Frame','Units', 'pixels',...   'BackgroundColor',[0.25 0.25 0.25],'Position',[377 cfig_height-110 159 107])uicontrol(cfig,'Style','Frame','Units', 'pixels',...   'BackgroundColor',[0.25 0.25 0.25],'Position',[4 cfig_height-175 310 58])uicontrol(cfig,'Style','Frame','Units', 'pixels',...   'BackgroundColor',[0.25 0.25 0.25],'Position',[318 cfig_height-200 218 83])   y_pos=cfig_height-25;aboutBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [10 y_pos-1 50 17],'UserData',0,...   'BackGroundColor',[0.6 0.6 0.6],...   'Tooltip','Who did this?',...   'Fontsize', f_size, ...   'String', 'About...','Callback', ['ebAct3D(''about'');'] );uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...     'Position', [80 y_pos-4 50 20], 'String', 'Zoom is:');rbzoomBH = uicontrol(cfig, 'Style', 'Toggle',...   'Position', [135 y_pos-4 50 20],'UserData',0,...   'BackGroundColor',[0.75 0.75 0.75],...   'Value',0,'Tooltip','Activate ''Rubber Band'' zooming',...   'String', 'Off','Callback', ['ebAct3D(''rbzoom'');'] );% ***************************************************************% **                   time/sample controls                    **y_pos=y_pos-5;uicontrol(cfig, 'Style', 'text','fontsize',f_size, ...      'Position', [315 y_pos 50 20], 'String', 'Time');uicontrol(cfig, 'Style', 'text','fontsize',f_size, ...     'Position', [260 y_pos 50 20], 'String', 'Sample');y_pos=y_pos-25;uicontrol(cfig, 'Style', 'text','fontsize',f_size, ...   'Position', [10 y_pos 45 20], 'String', 'Start');start_sli = uicontrol(cfig, 'Style', 'slider',...   'Position', [ 57 y_pos 200 20],...   'Min', 1, 'Max', datlen, 'Value', 1,...   'Visible','on',...   'Tooltip','Set the start time',...   'Callback',['ebAct3D(''start_sli'');']);start_txt = uicontrol(cfig, 'Style', 'edit',...   'Position', [260 y_pos 50 20],...   'Fontsize', f_size, ...   'String', num2str(get(start_sli, 'Value')),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Set the start time (samples)',...   'Callback', ['ebAct3D(''start_txt'');'] );start_txt2 = uicontrol(cfig, 'Style', 'edit',...   'Position', [315 y_pos 50 20],...   'Fontsize', f_size, ...   'String', num2str(get(start_sli, 'Value')/samp_freq),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Set the start time (seconds)',...   'Callback', ['ebAct3D(''f_start_txt'');'] );y_pos=y_pos-25;uicontrol(cfig, 'Style', 'text', 'fontsize',f_size, ...     'Position', [10 y_pos 45 20], 'String', 'Stop');stop_sli = uicontrol(cfig, 'Style', 'slider',...   'Position', [ 57 y_pos 200 20],...   'Min', 1, 'Max', datlen, 'Value', datlen,...   'Visible','on',...    'Tooltip','Set the stop time',...   'Callback',['ebAct3D(''stop_sli'');']);stop_txt = uicontrol(cfig, 'Style', 'edit',...   'Position', [260 y_pos 50 20],...   'Fontsize', f_size, ...   'String', num2str(get(stop_sli, 'Value')),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Set the stop time (samples)',...   'Callback', ['ebAct3D(''stop_txt'');'] );stop_txt2 = uicontrol(cfig, 'Style', 'edit',...   'Position', [315 y_pos 50 20],...   'Fontsize', f_size, ...   'String', num2str(get(stop_sli, 'Value')/samp_freq),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Set the stop time (seconds)',...   'Callback', ['ebAct3D(''f_stop_txt'');'] );y_pos=y_pos-25;uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...    'Position', [10 y_pos 45 20], 'FontSize',f_size,'String', 'Current');cur_sli = uicontrol(cfig, 'Style', 'slider',...   'Position', [ 57 y_pos 200 20],...   'Min', 1, 'Max', datlen, 'Value', 1,...   'Visible','on',...   'Tooltip','Shows the current point in the animation',...   'Callback',['ebAct3D(''cur_sli'');']);cur_txt = uicontrol(cfig, 'Style', 'edit',...   'Position', [260 y_pos 50 20],...   'Fontsize', f_size, ...   'String', num2str(get(cur_sli, 'Value')),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Shows the current point in the animation (samples)',...   'Callback', ['ebAct3D(''cur_txt'');'] );cur_txt2 = uicontrol(cfig, 'Style', 'edit',...   'Position', [315 y_pos 50 20],...   'Fontsize', f_size, ...   'String', num2str(get(cur_sli, 'Value')/samp_freq),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Shows the current point in the animation (seconds)',...   'Callback', ['ebAct3D(''f_cur_txt'');'] );% ***************************************************************% **                play/movie/misc controls                   **y_pos=cfig_height-30;livemonBH = uicontrol(cfig, 'Style', 'checkbox',...   'Position', [430 y_pos 100 20],'Value',1,...   'Tooltip','Update the waveform window during play',...   'Fontsize', f_size, ...   'String', 'Live Monitor', 'Callback', [''] );   y_pos=y_pos-25;uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...    'Position', [385 y_pos 110 20], 'String', 'Play each nth frame:');decimateH = uicontrol(cfig, 'Style', 'edit',...   'Position', [500 y_pos 30 20],...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Play every nth point',...   'Fontsize', f_size, ...   'String', num2str(fix(samp_freq/25)), 'Callback', ['ebAct3D(''speed_d'')'] );y_pos=y_pos-25;uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...    'Position', [385 y_pos 110 20], 'String', 'Speed (frames/sec):');fpsH = uicontrol(cfig, 'Style', 'edit',...   'Position', [500 y_pos 30 20],...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Set the frames/second',...   'Fontsize', f_size, ...   'String', num2str(fix(25)), 'Callback', ['ebAct3D(''speed_f'')'] );y_pos=y_pos-25;uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...    'Position', [385 y_pos 40 20], 'String', 'Movie:');e_movieBH = uicontrol(cfig, 'Style', 'checkbox',...   'Position', [428 y_pos 50 20],'Value',0,...   'Tooltip','Save the eyeball animation as a QuickTime movie',...   'Fontsize', f_size, ...   'String', 'Eyes', 'Callback', [''] );wf_movieBH = uicontrol(cfig, 'Style', 'checkbox',...   'Position', [480 y_pos 50 20],'Value',0,...   'Tooltip','Save the waveform animation as a QuickTime movie',...   'Fontsize', f_size, ...   'String', 'Data', 'Callback', [''] );   y_pos=cfig_height-143; x_pos=325; buttWid = 65; buttSep1 = 69; buttSep2 = 138;plotXYh = uicontrol(cfig,'Style','CheckBox','Units','pixels',...   'ForeGroundColor','k','BackGroundColor',[0.75 0.75 0.75],...   'Position',[x_pos y_pos-25 buttWid 20], 'Value', 0,...   'Fontsize', f_size, ...   'String','XY Plot','UserData','control',...   'Tooltip','Plot phase plane data in the waveform monitor',...   'Callback', ['ebAct3D(''wf_draw'')']);plotXY = get(plotXYh, 'value');xysetBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [x_pos+buttSep1 y_pos-25 buttWid 20],'UserData',0,...   'Tooltip','XY plot settings',...   'Fontsize', f_size, ...   'String', 'XY Setup', 'Callback', ['ebAct3D(''xy_setup'')'] );plotSTMh = uicontrol(cfig, 'Style', 'Checkbox',...   'Position', [x_pos y_pos-50 buttWid 20],'UserData',chLineH,...   'Value',~noSTM, 'Enable', plotStmEnab,...   'Tooltip','Plot stimulus data in the waveform monitor',...   'Fontsize', f_size, ...   'String', 'Plot Stm', 'Callback', ['ebAct3D(''wf_draw'')'] );   crossH = uicontrol(cfig, 'Style', 'Checkbox',...   'Position', [x_pos+buttSep1 y_pos-50 buttWid 20],'UserData',chLineH,...   'Value',1, 'Tooltip','Show/Hide crosshairs',...   'Fontsize', f_size, ...   'String', 'C Hairs', 'Callback', ['ebAct3D(''crosshairs'');'] );   torMrkrBH = uicontrol(cfig, 'Style', 'Checkbox',...   'Position', [x_pos+buttSep2 y_pos-50 buttWid 20],'UserData',0,...   'Tooltip','Display the torsion markers on the eyes',...   'Fontsize', f_size, ...   'Value',~noTOR, 'String', 'T Marks',...   'Callback', ['ebAct3D(''tormrkr'')'] );plotHORh = uicontrol(cfig,'Style','CheckBox','Units','pixels',...   'Position',[x_pos y_pos buttWid 20], 'Value', ~noHOR, 'Enable',plotHorEnab,...   'Fontsize', f_size, ...   'String','Plot Hor','UserData','control',...    'Tooltip','Plot horizontal data in the waveform monitor',...   'Callback', ['ebAct3D(''wf_draw'')'] );plotVRTh = uicontrol(cfig,'Style','CheckBox','Units','pixels',...   'Position',[x_pos+buttSep1 y_pos buttWid 20], 'Value', ~noVRT, 'Enable',plotVrtEnab,...   'ForeGroundColor','black','BackGroundColor',[0.75 0.75 0.75],...   'Fontsize', f_size, ...   'String','Plot Vrt','UserData','control',...    'Tooltip','Plot vertical data in the waveform monitor',...   'Callback', ['ebAct3D(''wf_draw'')'] );plotTORh = uicontrol(cfig,'Style','CheckBox','Units','pixels',...   'ForeGroundColor','black','BackGroundColor',[0.75 0.75 0.75],...   'Position',[x_pos+buttSep2 y_pos buttWid 20], 'Value', ~noTOR, 'Enable',plotTorEnab,...   'Fontsize', f_size, ...   'String','Plot Tor','UserData','control',...    'Tooltip','Plot torsional data in the waveform monitor',...   'Callback', ['ebAct3D(''wf_draw'')']);y_pos=cfig_height-200;eyelinerBH = uicontrol(cfig, 'Style', 'checkbox',...   'Position', [10 y_pos 70 20],'UserData',0,...   'Tooltip','Toggle the grid lines in the eyeballs... )',...   'Value', eyeliner,...   'Fontsize', f_size, ...   'String', 'Eye grid',...   'Callback', ['ebAct3D(''eyeliner'');'] );eyelightBH = uicontrol(cfig, 'Style', 'checkbox',...   'Position', [85 y_pos 70 20],'UserData',[2,3],...   'Tooltip','Turn on/off lighting of the eye',...   'Visible','on',...    'Value', eyelight,...   'UserData', [odLightH osLightH], ...   'Fontsize', f_size, ...   'String', 'Eye light',...   'Callback', ['ebAct3D(''eyelight'');'] );loadBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [250 y_pos 60 20],'UserData',0,...   'Tooltip','Load new data',...   'Fontsize', f_size, ...   'String', 'Load Data', 'Callback', ['ebdataload;ebAct3D(''load_data'')'] );y_pos=cfig_height-224;eyecolorBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [10 y_pos 70 20],'UserData',0,...   'Tooltip','Don''t it make my brown eyes blue (or green or whatever... )',...   'Fontsize', f_size, ...   'String', 'Eye Color', 'Callback', ['ebAct3D(''color'');'] );movPrefsBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [85 y_pos 70 20],'UserData',[2,3],...   'Tooltip','View/Modify the QuickTime settings',...   'Visible','on',...    'Fontsize', f_size, ...   'UserData', movPrefs, ...   'String', 'Movie Prefs',...   'Callback', ['ebAct3D(''movieprefs'');'] );scaleBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [250 y_pos 60 20],'UserData',0,...   'Tooltip','Offset & scale the data',...   'Fontsize', f_size, ...   'String', 'Scale Data',...   'Callback', ['datscale;'] );pauseBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [325 y_pos 50 20],'UserData',0,...   'String', 'Pause',...   'Fontsize', f_size, ...   'UserData', stop_sli, ...   'Tooltip','Pause the animation (press any key to resume)',...   'Callback', ['disp(''playback paused: press any key to continue'');pause']);   playBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [378 y_pos 50 20],'UserData',0,...   'Fontsize', f_size, ...   'Tooltip','Make the eyeballs animate the data',...   'ForeGroundColor','blue','BackGroundColor',[0.75 0.75 0.75],...   'String', 'Play', 'Callback', ['ebAct3D(''play!'');'] );   stopBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [430 y_pos 46 20],'UserData',0,...   'Fontsize', f_size, ...   'String', 'Stop', 'UserData', stop_sli, ...   'ForeGroundColor','red','BackGroundColor',[0.75 0.75 0.75],...   'Tooltip','Stop the playback animation',...   'Callback', ['set(get(gco,''Userdata''),''Value'',1)'] );   % 'Userdata' contains the handle of the 'stop' slider.   % pressing 'Stop' sets the stop slider to 1, which will cause   % the playback loop to exit doneBH = uicontrol(cfig, 'Style', 'Pushbutton',...   'Position', [485 y_pos 45 20],'UserData',0,...   'Tooltip','Th-th-th-that''s all, folks!',...   'Fontsize', f_size, ...   'String', 'Done', 'Callback', ['ebAct3D(''done!'');'] );% ***************************************************************% **         create the efig,wfig sliders & edit boxes           **y_pos=cfig_height-145;uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...    'Fontsize', f_size, ...   'Position', [10 y_pos 100 20], 'String', 'Eyeballs size');eb_size_sli = uicontrol(cfig, 'Style', 'slider',...   'Position', [ 112 y_pos 150 20],...   'Min', 0.5, 'Max', 1.0, 'Value', eb_size,...   'Visible','on',...   'Tooltip','Scale the eyeballs window',...   'Callback',['ebAct3D(''resize_eb_sli'');']);eb_size_txt = uicontrol(cfig, 'Style', 'edit',...   'Position', [265 y_pos 40 20],...   'Fontsize', f_size, ...   'String', num2str(get(eb_size_sli,'Value'),2),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Scale the eyeballs window',...   'Callback', ['ebAct3D(''resize_eb_txt'');']);y_pos=y_pos-25; %% y_pos=35uicontrol(cfig, 'Style', 'text', 'fontsize', f_size, ...    'Position', [10 y_pos 100 20], 'String', 'Data window size');wf_size_sli = uicontrol(cfig, 'Style', 'slider',...   'Position', [112 y_pos 150 20],...   'Min', 0.5, 'Max', 1.0, 'Value', wf_size,...   'Visible','on',...   'Tooltip','Scale the waveform window',...   'Callback',['ebAct3D(''resize_wf_sli'');']);wf_size_txt = uicontrol(cfig, 'Style', 'edit',...   'Position', [265 y_pos 40 20],...   'Fontsize', f_size, ...   'String', num2str(get(wf_size_sli,'Value'),2),...   'BackGroundColor','magenta','ForeGroundColor','white',...   'Tooltip','Scale the waveform window',...   'Callback', ['ebAct3D(''resize_wf_txt'');'] );cH = [plotHORh plotVRTh plotTORh,...      0 0 pauseBH decimateH fpsH,...      livemonBH e_movieBH wf_movieBH 0,...       eb_size_sli wf_size_sli osMrkr eb_size_txt wf_size_txt 0,...      start_sli stop_sli cur_sli,...      start_txt stop_txt cur_txt,...      start_txt2 stop_txt2 cur_txt2 movPrefsBH crossH,...      plotXYh xysetBH stopBH plotSTMh rbzoomBH eyelinerBH eyelightBH];set(cfig,'UserData', cH);% ***************************************************************% ***************************************************************% **               create the waveform window                  **% ***************************************************************% ***************************************************************planes = [];if ~noHOR,  planes = [planes 'h']; endif ~noVRT,  planes = [planes 'v']; endif ~noTOR,  planes = [planes 't']; endif plotXY,  planes = [planes 'x']; end %%%%%%numplanes = length(planes);if numplanes == 1	wfigmax=[300 280];          %% 255 elseif numplanes == 2	wfigmax=[300 540];          %% 507 elseif numplanes == 3 	wfigmax=[300 670];          %% 640 elseif numplanes == 4	wfigmax=[300 810];          %% 780 else   disp('No hor, vrt, or tor data loaded.  Aborting!')   ebAct3D('done!')endwf_scale = get(wf_size_sli,'Value');x0 = wf_center(1)-(wfigmax(1)/2)*wf_scale;y0 = wf_center(2)-(wfigmax(2)/2)*wf_scale;wfigpos(1:2) = [x0 y0];wfigpos(3:4) = wfigmax*wf_scale;% initialize the window objects handle list to zeros until they can% be properly initialized in the call to 'ebact('wf_draw')'.%%% 01/14/05: changed 'renderer' to 'zbuffer' because 'opengl' is broken.wH = zeros(15,1);% need to pay attention to window scale size here.wfig = figure('Resize','off','Position', wfigpos, ...              'Name',['Waveform Monitor'],'NumberTitle','off', ...              'UserData',{planes,wH,0,0}, ...              'renderer','zbuffer',...              'Tag','Waveform Monitor',...              'Menubar','none',...              'Color',[0.2 0.2 0.2],...              'DeleteFcn','ebAct3D(''done!'')' );%set(wfig,'backingstore','off')colordef(wfig,'none')% OK, this is weird, but seems to be needed, or else the wform window will % slowly (1 pixel at a time) crawl rightwards.set(wfig,'Position', wfigpos)ebAct3D('wf_draw')figure(cfig)