% datscale.m: GUI to offset and scale OD/OS H/V/T data.% eventually it will be callable from programs% other than eyeballs3D/ebAct3D (and the command line)% Written by: Jonathan Jacobs%             April 2002 - June 2003 (last mod: 06/05/03)% Files necessary for proper operation:%   'eyeballs3d', 'ebAct3D.m', 'datscale.m', 'd2pt.m'%   'xyplotsettings.m', 'ebdatacheck.m', 'ebdataload.m'%  2 Dec 02: create data scaling window at proper size, rather than resizing% 30 May 03: fixed bug where offset values for undisplayed axes was%               '1' instead of '0'.%            fixed stoopid typo that prevented proper updating of waveform%               window when scale/offset were entered.%               ebAct3D('wf_draw') NOT 'wfdraw'.  doofus!% 01 Feb 05: scale values are stored in the wf FIGURE'S 'UserData' now,%               rather than in that for the individual AXES'.%               This fixes the necessity of the axes being displayed in the wf%               window for scaling to be available.% if the scaling and offset window is open, the offset & scaling% factors will be read directly from its controls.% if it is NOT open, check to see if the wf window has been initialized.% if so, there are previously-set o&s values stored in the axes 'UserData'.% if the window is brand new, then initialize o&s values to 0 & 1.function [lhs, lvs, lts, rhs, rvs, rts] = datscale(callStr)global rh lh rv lv rt lt% look for the open windowsefig = -1; cfig = -1; wfig = -1; sfig = -1;wl = get(0,'Children');for i = 1:length(wl)   if strcmp(get(wl(i),'Name'),'Eye Monitor'),           efig=wl(i); end   if strcmp(get(wl(i),'Name'),'Eye Monitor Control'),   cfig=wl(i); end   if strcmp(get(wl(i),'Name'),'Waveform Monitor'),      wfig=wl(i); end   if strcmp(get(wl(i),'Name'),'Data Scaling & Offset'), sfig=wl(i); endendif sfig > 0, figure(sfig); return; end if nargin == 0   callStr = 'initialize';   callBackStr = 'ebAct3D(''wf_draw'')'; else   callBackStr = 'datscale(''standalone'')';endif strcmp(callStr,'initialize') | strcmp(callStr,'reset')     % get the initial Offset&Scale values from the waveform   % window, if it is open. otherwise initialize to 0's & 1's.	if isempty(wfig) | strcmp(callStr,'reset')	   lh_off = 0; lv_off = 0; lt_off = 0;	   rh_off = 0; rv_off = 0; rt_off = 0;	   lh_sca = 1; lv_sca = 1; lt_sca = 1;	   rh_sca = 1; rv_sca = 1; rt_sca = 1;    else      temp = get(wfig,'UserData');		planes=temp{1}; wH=temp{2}; o_and_s=temp{3};		offset = o_and_s{1}; scale = o_and_s{2};				rh_sca=scale(1,1); rh_off=offset(1,1);		lh_sca=scale(1,2); lh_off=offset(1,2);		rv_sca=scale(2,1); rv_off=offset(2,1);		lv_sca=scale(2,2); lv_off=offset(2,2);		rt_sca=scale(3,1); rt_off=offset(3,1);		lt_sca=scale(3,2); lt_off=offset(3,2);	end	if isempty(cfig)		initpos = [300 300];	 else		temp = get(cfig,'Position');		initpos = temp(1:2);	end 	sfigpos = [initpos(1:2)+[100 -100]  310 90];	sfig = figure('Resize','off','Position', sfigpos,...	              'Tag','Editing: Data scale',...	              'Menubar','none',...	              'Name',['Data Scaling & Offset'],'NumberTitle','off', ...	              'DeleteFcn',['clear global sfig;close'] );	uicontrol(sfig,'Style','Frame','Units', 'pixels',...	   'BackgroundColor',[0.25 0.25 0.25],'Position',[4 4 302 86])	uicontrol(sfig, 'Style', 'text',...	   'Position', [10 75 55 12], 'String', 'OD:  Scale');	uicontrol(sfig, 'Style', 'text',...	   'Position', [65 75 35 12], 'String', 'Offset');	uicontrol(sfig, 'Style', 'text',...	   'Position', [135 75 55 12], 'String', 'OS:  Scale');	uicontrol(sfig, 'Style', 'text',...	   'Position', [190 75 35 12], 'String', 'Offset');	uicontrol(sfig, 'Style', 'text',...	   'Position', [10 56 15 15], 'String', 'H');	uicontrol(sfig, 'Style', 'text',...	   'Position', [135 56 15 15], 'String', 'H');	lh_scaleH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [152 54 35 20],...	   'Tooltip','Scale the left horizontal data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(lh_sca),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	rh_scaleH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [27 54 35 20],...	   'Tooltip','Scale the right horizontal data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(rh_sca),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	lh_offsetH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [190 54 35 20],...	   'Tooltip','Offset the left horizontal data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(lh_off),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	rh_offsetH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [65 54 35 20],...	   'Tooltip','Offset the right horizontal data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(rh_off),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	uicontrol(sfig, 'Style', 'text',...	   'Position', [10 33 15 15], 'String', 'V');	uicontrol(sfig, 'Style', 'text',...	   'Position', [135 33 15 15], 'String', 'V');	lv_scaleH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [152 31 35 20],...	   'Tooltip','Scale the left vertical data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(lv_sca),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	rv_scaleH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [27 31 35 20],...	   'Tooltip','Scale the right vertical data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(rv_sca),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	lv_offsetH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [190 31 35 20],...	   'Tooltip','Offset the left vertical data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(lv_off),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	rv_offsetH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [65 31 35 20],...	   'Tooltip','Offset the right vertical data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(rv_off),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	uicontrol(sfig, 'Style', 'text',...	   'Position', [10 10 15 15], 'String', 'T');	uicontrol(sfig, 'Style', 'text',...	   'Position', [135 10 15 15], 'String', 'T');	lt_scaleH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [152 8 35 20],...	   'Tooltip','Scale the left torsional data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(lt_sca),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	rt_scaleH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [27 8 35 20],...	   'Tooltip','Scale the right torsional data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(rt_sca),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	lt_offsetH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [190 8 35 20],...	   'Tooltip','Offset the left torsional data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(lt_off),'UserData','ds',...,	   'Callback',['ebAct3D(''wf_draw'')']);	rt_offsetH = uicontrol(sfig, 'Style', 'edit',...	   'Position', [65 8 35 20],...	   'Tooltip','Offset the right torsional data',...	   'BackGroundColor','magenta','ForeGroundColor','white',...	   'String', num2str(rt_off),'UserData','ds',...	   'Callback',['ebAct3D(''wf_draw'')']);	doneBH = uicontrol(sfig, 'Style', 'Pushbutton',...	   'Position', [250 10 50 20],'UserData',0,...	   'Tooltip','Th-th-th-that''s all, folks!',...	   'String', 'Done', 'Callback',...	     ['delete(get(gco,''Parent''))'] );	      	resetBH = uicontrol(sfig, 'Style', 'Pushbutton',...	   'Position', [250 35 50 20],'UserData','ds',...	   'Tooltip','Reset all scaling to 1, offsets to 0',...	   'String', 'Reset',...	   'Callback',['delete(get(gco,''parent'')); datscale(''reset'');',...                  'ebAct3D(''wf_draw'');']);	      	hlist = [ rh_scaleH rv_scaleH rt_scaleH rh_offsetH rv_offsetH,...	         rt_offsetH lh_scaleH lv_scaleH lt_scaleH lh_offsetH,...	         lv_offsetH lt_offsetH];	set(sfig,'UserData',hlist);   figure(sfig)end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if called without output arguments we will only use the GUI-based% o/s functionality (such as built into eyeballs3D/ebAct3D).% Otherwise we do the offset and scaling here and return the% results to the workspace that called 'datscale'if strcmp(callStr,'standalone')	lh_scale = str2num(get(lh_scaleH,'String'));	rh_scale = str2num(get(rh_scaleH,'String'));	lv_scale = str2num(get(lv_scaleH,'String'));	rv_scale = str2num(get(rv_scaleH,'String'));	lt_scale = str2num(get(lt_scaleH,'String'));	rt_scale = str2num(get(rt_scaleH,'String'));	lh_offset = str2num(get(lh_offsetH,'String'));	rh_offset = str2num(get(rh_offsetH,'String'));	lv_offset = str2num(get(lv_offsetH,'String'));	rv_offset = str2num(get(rv_offsetH,'String'));	lt_offset = str2num(get(lt_offsetH,'String'));	rt_offset = str2num(get(rt_offsetH,'String'));	lhs = lh*lh_scale + lh_offset;	rhs = rh*rh_scale + rh_offset;	lvs = lv*lv_scale + lv_offset;	rvs = rv*rv_scale + rv_offset;	lts = lt*lt_scale + lt_offset;	rts = rt*rt_scale + rt_offset;end