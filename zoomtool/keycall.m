function keycall( key )% Function to be called when zoomtool (modified by p skelly) % is in use and a key is pressed.% written by: Peg Skelly and Jonathan Jacobs%             September 1995 - June 2002  (last mod: 06/08/02)global linVisTogFlag curVisTogFlag temp  = get(gca, 'UserData');if ~isempty(temp)   h2 = temp{2};   hLToggle=h2{20};      hCur1Box=h2{17};       hCur2Box=h2{18};   cur1VisFrameH=h2{6};  cur2VisFrameH=h2{12};  linVisFrameH=h2{28};else   returnendkey=lower(key);if isempty(curVisTogFlag), curVisTogFlag=0; endif isempty(linVisTogFlag), linVisTogFlag=0; end% this is pretty clever.  if the keypress was 'v', we will set a flag% (by using a global variable) and return to get the next keystroke.% if it is a valid number (currently only 1-9 supported -- double digits% may eventually work) then toggle that line's visibility and return.% If the following keystroke is not valid, simply return w/o doing anything.% set line visiblity toggle flagif( strcmp(key,'v') & ~curVisTogFlag)   linVisTogFlag = 1;   set(linVisFrameH,'Vis','On');   returnend% toggle line nif( linVisTogFlag )   [dummy,numLines] = size(hLToggle);   whichLine = str2num(get(gcf,'CurrentChar'));   if whichLine & (whichLine<=numLines)	   linetggl(get(hLToggle(whichLine),'UserData'),gcf);	   state = get(hLToggle(whichLine),'Value');	   set(hLToggle(whichLine),'Value',mod(state+1,2))   end   linVisTogFlag = 0;   set(linVisFrameH,'Vis','Off');   returnend% For the cursors, we'll do (in essence) what we did above for% line visibility: get the first character ('c') and return to zoomtool% to get the next keystroke.  If it's a 1 or a 2, toggle the % appropriate cursor.  If not, just ignore it and return.% set cursor visibility toggle flagif( strcmp(key,'c') & ~linVisTogFlag)   curVisTogFlag = 1;   set(cur1VisFrameH,'Vis','On');   set(cur2VisFrameH,'Vis','On');   returnend% toggle cursor nif( curVisTogFlag )   whichCur = str2num(get(gcf,'CurrentChar'));   if ~isempty(whichCur)	   if whichCur == 1		   curtoggl('curOne');		   state = get(hCur1Box,'Value');		   set(hCur1Box,'Value',mod(state+1,2))		   curtoggl('curOne');		 elseif whichCur == 2		   state = get(hCur2Box,'Value');		   set(hCur2Box,'Value',mod(state+1,2))		   curtoggl('curTwo');	   end   end   curVisTogFlag = 0;   set(cur1VisFrameH,'Vis','Off');   set(cur2VisFrameH,'Vis','Off');   returnend% Hit the 'Quit' buttonif( strcmp(key,'q') ),   zoomclr(get(gcf,'CurrentAxes'));end% Hit the 'Update' buttonif( strcmp(key,'u') ),   zoomclr(get(gcf,'CurrentAxes'));   zoomtoolend% Hit the 'Toggle' buttonif( strcmp(key,'t') ),   zoomtggl(gca, 'key press');end% zoom inif( strcmp(key,'i') ),   zoomxin(gca);   autorange_y;end% zoom outif( strcmp(key,'o') ),   zoomxout(gca);   autorange_y;end% auto rangeif( strcmp(key,'a') ),   autorange_y(gca);end% put the x value of cursor 1 into 'xMatrix'if( strcmp(key,'x') ),   global xyCur1Ctr xyCur1Mat;   xyCur1Ctr = xyCur1Ctr+1;   [xyCur1Mat(xyCur1Ctr,1),dum] = getcurxy(gca,1);end% put the x,y value of cursor 1 into 'xyCur1Mat'if( strcmp(key,'y') ),   global xyCur1Ctr xyCur1Mat;   xyCur1Ctr = xyCur1Ctr+1;   [xyCur1Mat(xyCur1Ctr,1),xyCur1Mat(xyCur1Ctr,2)] = getcurxy(gca,1);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% CURSOR CONTROLS% cursor 1, left one pointif( strcmp(key,'4') ),   zoomleft(gca,1);end% cursor 1, right one pointif( strcmp(key,'6') ),   zoomrght(gca,1)end	% cursor 2, left one pointif( strcmp(key,'1') ),   zoomleft(gca,2);end% cursor 2, right one pointif( strcmp(key,'3') ),   zoomrght(gca,2)end	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Screen controls% Forward one screenif( strcmp(key,'8') ),   scrlrt(gca)   autorange_y   newlimsend	% back one screenif( strcmp(key,'2') ),   scrllft(gca)   autorange_y   newlimsend% Forward half a screenif( strcmp(key,'9') ),   scrhrt(gca)   autorange_y   newlimsend	% back half a screenif( strcmp(key,'7') ),   scrhlft(gca)   autorange_y   newlimsend% try to clean the screen.% 'refresh' doesn't always do it quite right.% probably a MATLAB bug.  so we're gonna be tricky% and do 2 'redraws' by resetting the Xlims for the axisif( strcmp(key,'5') ),   xlims = get(gca, 'Xlim');   xlo = xlims(1);   xhi = xlims(2);   if xhi > 0      set(gca, 'Xlim', [0 xhi]);    elseif xhi < 0      set(gca, 'Xlim', [xhi 0]);    elseif xhi == 0      set(gca, 'Xlim', [xlo 0]);   end   set(gca, 'Xlim', xlims);end	return