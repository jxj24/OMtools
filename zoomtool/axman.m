% axman.m: called by zoomtool whenever user manually updates the % x/y axis min/max.% Written by: Jonathan Jacobs%             June 1996 - July 1996 (last mod: 07/02/96)function axman( axLim )if strcmp(get(gcf,'Tag'),'zoomed window')   temp = get(gca, 'UserData'); else   disp('axman: error -- front window does not have a zoomtool')   returnendbigHList = temp{2};hXLow  = bigHList{22};  hXHigh = bigHList{21};hYLow  = bigHList{25};  hYHigh = bigHList{24};ga = get( hXLow, 'UserData');curs1Loc = crsrloc(ga, 1001);curs2Loc = crsrloc(ga, 2001);c1v = findline(ga,1001); c2v = findline(ga,2001); % vertical cursor linesc1h = findline(ga,1002); c2h = findline(ga,2002); % horizontal cursor linesv = version;v=str2double(v(1:3));      if strcmp( axLim, 'xLo' )     % change x-endpoints of horizontal cursors   old_XHigh = str2double(get(hXHigh,'String'));   new_XLow  = str2double(get(hXLow, 'String'));   if new_XLow < old_XHigh      % change the x-axis display limits      set(ga, 'XLim', [new_XLow old_XHigh]);      % set the horizontal cursors to the proper length      if v >= 8.4		  [~, oldc1hY] = getpoints(c1h);		  [~, oldc2hY] = getpoints(c2h);		  clearpoints(c1h); clearpoints(c2h)		  addpoints(c1h, [new_XLow old_XHigh], oldc1hY); % ylim vals for vrt crsr		  addpoints(c2h, [new_XLow old_XHigh], oldc2hY); % ylim vals for vrt crsr		else		  set(findline(ga,1002),'XData',[new_XLow old_XHigh]);		  set(findline(ga,2002),'XData',[new_XLow old_XHigh]);	  end	        % if this new zoom would leave a cursor off screen      % move it to the edge of the screen      if (curs1Loc < new_XLow) || (curs1Loc > old_XHigh)         crsrmove(ga,1001,new_XLow);      end      if (curs2Loc < new_XLow) || (curs2Loc > old_XHigh)         crsrmove(ga,2001,old_XHigh);      end         endendif strcmp( axLim, 'xHi' )      % change x-endpoints of horizontal cursors   new_XHigh = str2double(get(hXHigh,'String'));   old_XLow  = str2double(get(hXLow, 'String'));   if new_XHigh > old_XLow      % change the x-axis display limits      set(ga, 'XLim', [old_XLow new_XHigh]);      % set the horizontal cursors to the proper length      if v >= 8.4		  [~, oldc1hY] = getpoints(c1h);		  [~, oldc2hY] = getpoints(c2h);		  clearpoints(c1h); clearpoints(c2h)		  addpoints(c1h, [old_XLow new_XHigh], oldc1hY); % ylim vals for vrt crsr		  addpoints(c2h, [old_XLow new_XHigh], oldc2hY); % ylim vals for vrt crsr		else          set(findline(ga,1002),'XData',[old_XLow new_XHigh]);          set(findline(ga,2002),'XData',[old_XLow new_XHigh]);	  end              % if this new zoom would leave a cursor off screen      % move it to the edge of the screen      if (curs1Loc < old_XLow) || (curs1Loc > new_XHigh)         crsrmove(ga,1001,old_XLow);      end      if (curs2Loc < old_XLow) || (curs2Loc > new_XHigh)         crsrmove(ga,2001,new_XHigh);      end         endendif strcmp( axLim, 'yLo' )     % change y-endpoints of horizontal cursors   old_YHigh = str2double(get(hYHigh,'String'));   new_YLow  = str2double(get(hYLow, 'String'));   if new_YLow < old_YHigh      set(ga, 'YLim', [new_YLow old_YHigh]);      if v >= 8.4		  [oldc1hX,~] = getpoints(c1v);		  [oldc2hX,~] = getpoints(c2v);		  clearpoints(c1v); clearpoints(c2v)		  addpoints(c1v, oldc1hX, [new_YLow old_YHigh] ); % ylim vals for vrt crsr		  addpoints(c2v, oldc2hX, [new_YLow old_YHigh] ); % ylim vals for vrt crsr	   else          set(findline(ga,1001),'YData',[new_YLow old_YHigh]);          set(findline(ga,2001),'YData',[new_YLow old_YHigh]);      end      endendif strcmp( axLim, 'yHi' )     % change y-endpoints of horizontal cursors   new_YHigh = str2double(get(hYHigh,'String'));   old_YLow  = str2double(get(hYLow, 'String'));   if new_YHigh > old_YLow      set(ga, 'YLim', [old_YLow new_YHigh]);              if v >= 8.4		 [oldc1hX,~] = getpoints(c1v);		 [oldc2hY,~] = getpoints(c2v);		 clearpoints(c1v); clearpoints(c2v)		 addpoints(c1v, oldc1hX, [old_YLow new_YHigh] ); % ylim vals for vrt crsr		 addpoints(c2v, oldc1hX, [old_YLow new_YHigh] ); % ylim vals for vrt crsr      else         set(findline(ga,1001),'YData',[old_YLow new_YHigh]);         set(findline(ga,2001),'YData',[old_YLow new_YHigh]);      end   endend