function zoomleft(ga,cursor)% ZOOMLEFT Used by ZOOMTOOL to move cursors one sample to the%           left after a "<" push button event.%       ZOOMLEFT(H,CURSOR) where H is the axis ZOOMTOOL is%       active in and CURSOR is the cursor number (1 or 2).%%       See also ZOOMCLR ZOOMDOWN ZOOMLEFT ZOOMMENU ZOOMMOVE%           ZOOMPKLF ZOOMPKRT ZOOMRGHT ZOOMSET ZOOMTGGL ZOOMTOOL%           ZOOMUP ZOOMXFUL ZOOMXIN ZOOMXOUT ZOOMYFUL ZOOMYIN%           ZOOMYOUT%       Dennis W. Brown 1-10-94%       Copyright (c) 1994 by Dennis W. Brown%       May be freely distributed.%       Not for use in commercial products.% Modifications by Jonathan Jacobs%                  September 1997 - May 2005 (last mod: 05/26/05)% find parent windowgf = get(ga,'Parent');% get some data about the current axes state:%  zoom_xfactor is spacing between samples, %  xmin is time of 1st data point, i.e. offset for start time of plotzoom_xfactor = get(get(ga,'xlabel'),'UserData');zoom_xxlim   = get(ga,'Xlim');zoom_xdat    = get(findline(ga,'zoomed'),'XData');good_pts     = zoom_xdat(find(~isnan(zoom_xdat)));zoom_xmin    = min(good_pts);% get current cursor locationsif cursor == 1    t = crsrloc(ga,1001);else    t = crsrloc(ga,2001);end;% check to see if move will go past axis limitsif t <= zoom_xxlim(1)+100*eps, return; end;% calc current index from timek = round((t-zoom_xmin)/zoom_xfactor) + 1;if k<1, k=1; end% new vertical & hor cursor positionscv = t-zoom_xfactor;newxpos = k-1;               %%%05/24/05y = get(findline(ga,'zoomed'),'YData');if newxpos>0   ch = y(newxpos);  else   ch = y(1);   cv = t; end% move cursor to mouse click locationtemp = get(ga,'UserData');     h = temp{1};           % handles to readoutsif cursor == 1,    crsrmove(ga,1001,cv);    crsrmove(ga,1002,ch);    set(h(9),'String',num2str(cv));    set(h(10),'String',num2str(ch));    cvb = crsrloc(ga,2001);    chb = crsrloc(ga,2002);else    crsrmove(ga,2001,cv);    crsrmove(ga,2002,ch);    set(h(13),'String',num2str(cv));    set(h(14),'String',num2str(ch));    cvb = crsrloc(ga,1001);    chb = crsrloc(ga,1002);end;set(h(11),'String',num2str(abs(cvb-cv)));set(h(12),'String',num2str(abs(chb-ch)));