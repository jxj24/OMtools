function cursHandle=crsrmake(ax,name,orient,posit,ltype,lcolr,hCurMode,curWidth)%CRSRMAKE Create axes crsr.%       H=CRSRMAKE(AXES,'NAME','DIRECTION',POSITION,'LINETYPE',LINECOLOR)%       creates a cursor on the axes pointed to by the handle%       axes. If not handle is provided, the current axes is%       used. 'NAME' is a unique identifier for the cursor and%       is used to reference the cursor during subsequent cursor%       operations. 'direction' can be either 'horizontal' or%       'vertical'. POSITION is a scalar number of where the%       cursor is to be located (x-axis location for 'vertical'%       cursors, y-axis location for 'horizontal' cursors).%       'LINETYPE' is any valid MATLAB linetype. An error occurs%       if a cursor is created beyond the limits of the axes.%%       See also CRSRMOVE, CRSRDEL, CRSRON, CRSROFF%       Dennis W. Brown 1-10-94%       Copyright (c) 1994 by Dennis W. Brown%       May be freely distributed.%       Not for use in commercial products.%	p skelly added lcolr variable to function inputs to specify%	the cursor line color in rgb vector format% Modifications by Jonathan Jacobs%                  September 1997 - June 2002 (last mod: 06/08/02)v = version;v=str2double(v(1:3));if nargin<8, curWidth = 1.0; end% get current axis datax = get(ax,'XLim');y = get(ax,'YLim');val = get(hCurMode,'Value');str = get(hCurMode,'String');emode = str(val,:);% Setting 'HitTest' to 'off' prevents the horizontal cursor% from intercepting a click meant to be delivered to the data% line. Without this command, it is impossible to make the% h/v cursor pair move to a point on the 'zoomed' data line that% is covered by the h cursor. Clever, eh?if strcmp(orient,'vertical')      % check the location   if posit<x(1) || posit>x(2)      %error('crsrmake: Cursor location out of axes range!');   end   % Handle Graphics 2 for Matlab2014b and up   if v >= 8.4      % allow user to change VERTICAL cursor width for visibility      cursHandle = animatedline( [posit posit], y, ...         'LineStyle',ltype, 'LineWidth',curWidth,...         'Color', lcolr, 'HitTest','off',...         'Visible','on','UserData',name);   else      cursHandle = line('EraseMode',emode,'LineStyle',ltype,...         'Color', lcolr, 'HitTest','off', 'LineWidth',curWidth,...         'XData',[posit posit],'YData',y,...         'Visible','on','UserData',name);   end   elseif strcmp(orient,'horizontal')      % check the location   if posit<y(1) || posit>y(2)            %error('crsrmake: Cursor location out of axes range!');   end      if v >= 8.4      cursHandle = animatedline(x,[posit posit], ...         'LineStyle',ltype,'Color',lcolr,...         'HitTest','off', 'Visible','on','UserData',name);   else      cursHandle = line('EraseMode',emode,'LineStyle',ltype,...         'Color',lcolr, 'HitTest','off',...         'XData',x,'YData',[posit posit],...         'Visible','on','UserData',name);   end   else   error('crsrmake: Invalid cursor orientation!');end