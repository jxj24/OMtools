function [x,y] = getcurxy(ga,cursor)%  getcurxy is used by zoomtool modified by p skelly to %  get data points corresponding to the cursor(s).% find parent windowgf = get(ga,'Parent');% get some data about the current axes statezoom_xfactor = get(get(ga,'xlabel'),'UserData');zoom_xxlim = get(ga,'Xlim');zoom_xmin = zoom_xxlim(1);debug=0;% get current vertical cursor locationsif cursor == 1   t = crsrloc(ga,1001); else   t = crsrloc(ga,2001);end;if t <= zoom_xxlim(1)+100*eps, t = zoom_xxlim(1); end;if t >= zoom_xxlim(2)-100*eps, t = zoom_xxlim(2); end;% calculate current indexk = fix((t-zoom_xmin)/zoom_xfactor) + 1;if k < 1, k=1; end% get line datazoom_yH = findline(ga,'zoomed');zoom_y = get(zoom_yH,'YData');if k > length(zoom_y), k=length(zoom_y); end% current point locationsx=fix((k-1)+zoom_xmin/zoom_xfactor);  %% z_xm/z_xf acts as a '1' (at least)if debug   disp(['t=' num2str(t) '   k=' num2str(k) '   x=' num2str(x)])end%%% old code.  may have 'off by one' errors% get x data to find index %x = get(findline(ga,'zoomed'),'XData');% find the place where XData = t%[m,n] = find( x >= t );% return the first index number as x%x = n(1);% get current horizontal cursor locations % (representing the vertical data values)if cursor == 1   y = crsrloc(ga,1002); else   y = crsrloc(ga,2002);end;y_calc = zoom_y(x);if debug,    disp(['y cursor = ' num2str(y) '   y calc = ' num2str(y_calc)])endif y ~= y_calc   disp('warning in ''getcurxy.m'': y (cursor) ~= y (calc)')end